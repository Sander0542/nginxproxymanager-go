/*
Nginx Proxy Manager API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.12.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nginxproxymanager

import (
	"encoding/json"
)

// checks if the UpdateAccessListRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateAccessListRequest{}

// UpdateAccessListRequest struct for UpdateAccessListRequest
type UpdateAccessListRequest struct {
	Name *string `json:"name,omitempty"`
	SatisfyAny *bool `json:"satisfy_any,omitempty"`
	PassAuth *bool `json:"pass_auth,omitempty"`
	Items []CreateAccessListRequestItemsInner `json:"items,omitempty"`
	Clients []CreateAccessListRequestClientsInner `json:"clients,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateAccessListRequest UpdateAccessListRequest

// NewUpdateAccessListRequest instantiates a new UpdateAccessListRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAccessListRequest() *UpdateAccessListRequest {
	this := UpdateAccessListRequest{}
	return &this
}

// NewUpdateAccessListRequestWithDefaults instantiates a new UpdateAccessListRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAccessListRequestWithDefaults() *UpdateAccessListRequest {
	this := UpdateAccessListRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateAccessListRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAccessListRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateAccessListRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateAccessListRequest) SetName(v string) {
	o.Name = &v
}

// GetSatisfyAny returns the SatisfyAny field value if set, zero value otherwise.
func (o *UpdateAccessListRequest) GetSatisfyAny() bool {
	if o == nil || IsNil(o.SatisfyAny) {
		var ret bool
		return ret
	}
	return *o.SatisfyAny
}

// GetSatisfyAnyOk returns a tuple with the SatisfyAny field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAccessListRequest) GetSatisfyAnyOk() (*bool, bool) {
	if o == nil || IsNil(o.SatisfyAny) {
		return nil, false
	}
	return o.SatisfyAny, true
}

// HasSatisfyAny returns a boolean if a field has been set.
func (o *UpdateAccessListRequest) HasSatisfyAny() bool {
	if o != nil && !IsNil(o.SatisfyAny) {
		return true
	}

	return false
}

// SetSatisfyAny gets a reference to the given bool and assigns it to the SatisfyAny field.
func (o *UpdateAccessListRequest) SetSatisfyAny(v bool) {
	o.SatisfyAny = &v
}

// GetPassAuth returns the PassAuth field value if set, zero value otherwise.
func (o *UpdateAccessListRequest) GetPassAuth() bool {
	if o == nil || IsNil(o.PassAuth) {
		var ret bool
		return ret
	}
	return *o.PassAuth
}

// GetPassAuthOk returns a tuple with the PassAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAccessListRequest) GetPassAuthOk() (*bool, bool) {
	if o == nil || IsNil(o.PassAuth) {
		return nil, false
	}
	return o.PassAuth, true
}

// HasPassAuth returns a boolean if a field has been set.
func (o *UpdateAccessListRequest) HasPassAuth() bool {
	if o != nil && !IsNil(o.PassAuth) {
		return true
	}

	return false
}

// SetPassAuth gets a reference to the given bool and assigns it to the PassAuth field.
func (o *UpdateAccessListRequest) SetPassAuth(v bool) {
	o.PassAuth = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *UpdateAccessListRequest) GetItems() []CreateAccessListRequestItemsInner {
	if o == nil || IsNil(o.Items) {
		var ret []CreateAccessListRequestItemsInner
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAccessListRequest) GetItemsOk() ([]CreateAccessListRequestItemsInner, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *UpdateAccessListRequest) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []CreateAccessListRequestItemsInner and assigns it to the Items field.
func (o *UpdateAccessListRequest) SetItems(v []CreateAccessListRequestItemsInner) {
	o.Items = v
}

// GetClients returns the Clients field value if set, zero value otherwise.
func (o *UpdateAccessListRequest) GetClients() []CreateAccessListRequestClientsInner {
	if o == nil || IsNil(o.Clients) {
		var ret []CreateAccessListRequestClientsInner
		return ret
	}
	return o.Clients
}

// GetClientsOk returns a tuple with the Clients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAccessListRequest) GetClientsOk() ([]CreateAccessListRequestClientsInner, bool) {
	if o == nil || IsNil(o.Clients) {
		return nil, false
	}
	return o.Clients, true
}

// HasClients returns a boolean if a field has been set.
func (o *UpdateAccessListRequest) HasClients() bool {
	if o != nil && !IsNil(o.Clients) {
		return true
	}

	return false
}

// SetClients gets a reference to the given []CreateAccessListRequestClientsInner and assigns it to the Clients field.
func (o *UpdateAccessListRequest) SetClients(v []CreateAccessListRequestClientsInner) {
	o.Clients = v
}

func (o UpdateAccessListRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateAccessListRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.SatisfyAny) {
		toSerialize["satisfy_any"] = o.SatisfyAny
	}
	if !IsNil(o.PassAuth) {
		toSerialize["pass_auth"] = o.PassAuth
	}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !IsNil(o.Clients) {
		toSerialize["clients"] = o.Clients
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateAccessListRequest) UnmarshalJSON(data []byte) (err error) {
	varUpdateAccessListRequest := _UpdateAccessListRequest{}

	err = json.Unmarshal(data, &varUpdateAccessListRequest)

	if err != nil {
		return err
	}

	*o = UpdateAccessListRequest(varUpdateAccessListRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "satisfy_any")
		delete(additionalProperties, "pass_auth")
		delete(additionalProperties, "items")
		delete(additionalProperties, "clients")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateAccessListRequest struct {
	value *UpdateAccessListRequest
	isSet bool
}

func (v NullableUpdateAccessListRequest) Get() *UpdateAccessListRequest {
	return v.value
}

func (v *NullableUpdateAccessListRequest) Set(val *UpdateAccessListRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAccessListRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAccessListRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAccessListRequest(val *UpdateAccessListRequest) *NullableUpdateAccessListRequest {
	return &NullableUpdateAccessListRequest{value: val, isSet: true}
}

func (v NullableUpdateAccessListRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAccessListRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


