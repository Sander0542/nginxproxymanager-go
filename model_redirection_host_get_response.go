/*
Nginx Proxy Manager API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.x.x
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nginxproxymanager

import (
	"encoding/json"
	"time"
)

// checks if the RedirectionHostGetResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RedirectionHostGetResponse{}

// RedirectionHostGetResponse struct for RedirectionHostGetResponse
type RedirectionHostGetResponse struct {
	// Unique identifier
	Id *int64 `json:"id,omitempty"`
	// Date and time of creation
	CreatedOn *time.Time `json:"created_on,omitempty"`
	// Date and time of last update
	ModifiedOn *time.Time `json:"modified_on,omitempty"`
	// Domain Names separated by a comma
	DomainNames []string `json:"domain_names,omitempty"`
	// Redirect HTTP Status Code
	ForwardHttpCode *int64 `json:"forward_http_code,omitempty"`
	// RFC Protocol
	ForwardScheme *string `json:"forward_scheme,omitempty"`
	// Domain Name
	ForwardDomainName *string `json:"forward_domain_name,omitempty" validate:"regexp=^(?:[^.*]+\\\\.?)+[^.]$"`
	// Should the path be preserved
	PreservePath *boolAsInt `json:"preserve_path,omitempty"`
	CertificateId *PutProxyHostUpdateRequestCertificateId `json:"certificate_id,omitempty"`
	// Is SSL Forced
	SslForced *boolAsInt `json:"ssl_forced,omitempty"`
	// Is HSTS Enabled
	HstsEnabled *boolAsInt `json:"hsts_enabled,omitempty"`
	// Is HSTS applicable to all subdomains
	HstsSubdomains *boolAsInt `json:"hsts_subdomains,omitempty"`
	// HTTP2 Protocol Support
	Http2Support *boolAsInt `json:"http2_support,omitempty"`
	// Should we block common exploits
	BlockExploits *boolAsInt `json:"block_exploits,omitempty"`
	AdvancedConfig *string `json:"advanced_config,omitempty"`
	// Is Enabled
	Enabled *boolAsInt `json:"enabled,omitempty"`
	Meta map[string]interface{} `json:"meta,omitempty"`
}

// NewRedirectionHostGetResponse instantiates a new RedirectionHostGetResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRedirectionHostGetResponse() *RedirectionHostGetResponse {
	this := RedirectionHostGetResponse{}
	return &this
}

// NewRedirectionHostGetResponseWithDefaults instantiates a new RedirectionHostGetResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRedirectionHostGetResponseWithDefaults() *RedirectionHostGetResponse {
	this := RedirectionHostGetResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RedirectionHostGetResponse) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RedirectionHostGetResponse) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RedirectionHostGetResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *RedirectionHostGetResponse) SetId(v int64) {
	o.Id = &v
}

// GetCreatedOn returns the CreatedOn field value if set, zero value otherwise.
func (o *RedirectionHostGetResponse) GetCreatedOn() time.Time {
	if o == nil || IsNil(o.CreatedOn) {
		var ret time.Time
		return ret
	}
	return *o.CreatedOn
}

// GetCreatedOnOk returns a tuple with the CreatedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RedirectionHostGetResponse) GetCreatedOnOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedOn) {
		return nil, false
	}
	return o.CreatedOn, true
}

// HasCreatedOn returns a boolean if a field has been set.
func (o *RedirectionHostGetResponse) HasCreatedOn() bool {
	if o != nil && !IsNil(o.CreatedOn) {
		return true
	}

	return false
}

// SetCreatedOn gets a reference to the given time.Time and assigns it to the CreatedOn field.
func (o *RedirectionHostGetResponse) SetCreatedOn(v time.Time) {
	o.CreatedOn = &v
}

// GetModifiedOn returns the ModifiedOn field value if set, zero value otherwise.
func (o *RedirectionHostGetResponse) GetModifiedOn() time.Time {
	if o == nil || IsNil(o.ModifiedOn) {
		var ret time.Time
		return ret
	}
	return *o.ModifiedOn
}

// GetModifiedOnOk returns a tuple with the ModifiedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RedirectionHostGetResponse) GetModifiedOnOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ModifiedOn) {
		return nil, false
	}
	return o.ModifiedOn, true
}

// HasModifiedOn returns a boolean if a field has been set.
func (o *RedirectionHostGetResponse) HasModifiedOn() bool {
	if o != nil && !IsNil(o.ModifiedOn) {
		return true
	}

	return false
}

// SetModifiedOn gets a reference to the given time.Time and assigns it to the ModifiedOn field.
func (o *RedirectionHostGetResponse) SetModifiedOn(v time.Time) {
	o.ModifiedOn = &v
}

// GetDomainNames returns the DomainNames field value if set, zero value otherwise.
func (o *RedirectionHostGetResponse) GetDomainNames() []string {
	if o == nil || IsNil(o.DomainNames) {
		var ret []string
		return ret
	}
	return o.DomainNames
}

// GetDomainNamesOk returns a tuple with the DomainNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RedirectionHostGetResponse) GetDomainNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.DomainNames) {
		return nil, false
	}
	return o.DomainNames, true
}

// HasDomainNames returns a boolean if a field has been set.
func (o *RedirectionHostGetResponse) HasDomainNames() bool {
	if o != nil && !IsNil(o.DomainNames) {
		return true
	}

	return false
}

// SetDomainNames gets a reference to the given []string and assigns it to the DomainNames field.
func (o *RedirectionHostGetResponse) SetDomainNames(v []string) {
	o.DomainNames = v
}

// GetForwardHttpCode returns the ForwardHttpCode field value if set, zero value otherwise.
func (o *RedirectionHostGetResponse) GetForwardHttpCode() int64 {
	if o == nil || IsNil(o.ForwardHttpCode) {
		var ret int64
		return ret
	}
	return *o.ForwardHttpCode
}

// GetForwardHttpCodeOk returns a tuple with the ForwardHttpCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RedirectionHostGetResponse) GetForwardHttpCodeOk() (*int64, bool) {
	if o == nil || IsNil(o.ForwardHttpCode) {
		return nil, false
	}
	return o.ForwardHttpCode, true
}

// HasForwardHttpCode returns a boolean if a field has been set.
func (o *RedirectionHostGetResponse) HasForwardHttpCode() bool {
	if o != nil && !IsNil(o.ForwardHttpCode) {
		return true
	}

	return false
}

// SetForwardHttpCode gets a reference to the given int64 and assigns it to the ForwardHttpCode field.
func (o *RedirectionHostGetResponse) SetForwardHttpCode(v int64) {
	o.ForwardHttpCode = &v
}

// GetForwardScheme returns the ForwardScheme field value if set, zero value otherwise.
func (o *RedirectionHostGetResponse) GetForwardScheme() string {
	if o == nil || IsNil(o.ForwardScheme) {
		var ret string
		return ret
	}
	return *o.ForwardScheme
}

// GetForwardSchemeOk returns a tuple with the ForwardScheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RedirectionHostGetResponse) GetForwardSchemeOk() (*string, bool) {
	if o == nil || IsNil(o.ForwardScheme) {
		return nil, false
	}
	return o.ForwardScheme, true
}

// HasForwardScheme returns a boolean if a field has been set.
func (o *RedirectionHostGetResponse) HasForwardScheme() bool {
	if o != nil && !IsNil(o.ForwardScheme) {
		return true
	}

	return false
}

// SetForwardScheme gets a reference to the given string and assigns it to the ForwardScheme field.
func (o *RedirectionHostGetResponse) SetForwardScheme(v string) {
	o.ForwardScheme = &v
}

// GetForwardDomainName returns the ForwardDomainName field value if set, zero value otherwise.
func (o *RedirectionHostGetResponse) GetForwardDomainName() string {
	if o == nil || IsNil(o.ForwardDomainName) {
		var ret string
		return ret
	}
	return *o.ForwardDomainName
}

// GetForwardDomainNameOk returns a tuple with the ForwardDomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RedirectionHostGetResponse) GetForwardDomainNameOk() (*string, bool) {
	if o == nil || IsNil(o.ForwardDomainName) {
		return nil, false
	}
	return o.ForwardDomainName, true
}

// HasForwardDomainName returns a boolean if a field has been set.
func (o *RedirectionHostGetResponse) HasForwardDomainName() bool {
	if o != nil && !IsNil(o.ForwardDomainName) {
		return true
	}

	return false
}

// SetForwardDomainName gets a reference to the given string and assigns it to the ForwardDomainName field.
func (o *RedirectionHostGetResponse) SetForwardDomainName(v string) {
	o.ForwardDomainName = &v
}

// GetPreservePath returns the PreservePath field value if set, zero value otherwise.
func (o *RedirectionHostGetResponse) GetPreservePath() boolAsInt {
	if o == nil || IsNil(o.PreservePath) {
		var ret boolAsInt
		return ret
	}
	return *o.PreservePath
}

// GetPreservePathOk returns a tuple with the PreservePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RedirectionHostGetResponse) GetPreservePathOk() (*boolAsInt, bool) {
	if o == nil || IsNil(o.PreservePath) {
		return nil, false
	}
	return o.PreservePath, true
}

// HasPreservePath returns a boolean if a field has been set.
func (o *RedirectionHostGetResponse) HasPreservePath() bool {
	if o != nil && !IsNil(o.PreservePath) {
		return true
	}

	return false
}

// SetPreservePath gets a reference to the given boolAsInt and assigns it to the PreservePath field.
func (o *RedirectionHostGetResponse) SetPreservePath(v boolAsInt) {
	o.PreservePath = &v
}

// GetCertificateId returns the CertificateId field value if set, zero value otherwise.
func (o *RedirectionHostGetResponse) GetCertificateId() PutProxyHostUpdateRequestCertificateId {
	if o == nil || IsNil(o.CertificateId) {
		var ret PutProxyHostUpdateRequestCertificateId
		return ret
	}
	return *o.CertificateId
}

// GetCertificateIdOk returns a tuple with the CertificateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RedirectionHostGetResponse) GetCertificateIdOk() (*PutProxyHostUpdateRequestCertificateId, bool) {
	if o == nil || IsNil(o.CertificateId) {
		return nil, false
	}
	return o.CertificateId, true
}

// HasCertificateId returns a boolean if a field has been set.
func (o *RedirectionHostGetResponse) HasCertificateId() bool {
	if o != nil && !IsNil(o.CertificateId) {
		return true
	}

	return false
}

// SetCertificateId gets a reference to the given PutProxyHostUpdateRequestCertificateId and assigns it to the CertificateId field.
func (o *RedirectionHostGetResponse) SetCertificateId(v PutProxyHostUpdateRequestCertificateId) {
	o.CertificateId = &v
}

// GetSslForced returns the SslForced field value if set, zero value otherwise.
func (o *RedirectionHostGetResponse) GetSslForced() boolAsInt {
	if o == nil || IsNil(o.SslForced) {
		var ret boolAsInt
		return ret
	}
	return *o.SslForced
}

// GetSslForcedOk returns a tuple with the SslForced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RedirectionHostGetResponse) GetSslForcedOk() (*boolAsInt, bool) {
	if o == nil || IsNil(o.SslForced) {
		return nil, false
	}
	return o.SslForced, true
}

// HasSslForced returns a boolean if a field has been set.
func (o *RedirectionHostGetResponse) HasSslForced() bool {
	if o != nil && !IsNil(o.SslForced) {
		return true
	}

	return false
}

// SetSslForced gets a reference to the given boolAsInt and assigns it to the SslForced field.
func (o *RedirectionHostGetResponse) SetSslForced(v boolAsInt) {
	o.SslForced = &v
}

// GetHstsEnabled returns the HstsEnabled field value if set, zero value otherwise.
func (o *RedirectionHostGetResponse) GetHstsEnabled() boolAsInt {
	if o == nil || IsNil(o.HstsEnabled) {
		var ret boolAsInt
		return ret
	}
	return *o.HstsEnabled
}

// GetHstsEnabledOk returns a tuple with the HstsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RedirectionHostGetResponse) GetHstsEnabledOk() (*boolAsInt, bool) {
	if o == nil || IsNil(o.HstsEnabled) {
		return nil, false
	}
	return o.HstsEnabled, true
}

// HasHstsEnabled returns a boolean if a field has been set.
func (o *RedirectionHostGetResponse) HasHstsEnabled() bool {
	if o != nil && !IsNil(o.HstsEnabled) {
		return true
	}

	return false
}

// SetHstsEnabled gets a reference to the given boolAsInt and assigns it to the HstsEnabled field.
func (o *RedirectionHostGetResponse) SetHstsEnabled(v boolAsInt) {
	o.HstsEnabled = &v
}

// GetHstsSubdomains returns the HstsSubdomains field value if set, zero value otherwise.
func (o *RedirectionHostGetResponse) GetHstsSubdomains() boolAsInt {
	if o == nil || IsNil(o.HstsSubdomains) {
		var ret boolAsInt
		return ret
	}
	return *o.HstsSubdomains
}

// GetHstsSubdomainsOk returns a tuple with the HstsSubdomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RedirectionHostGetResponse) GetHstsSubdomainsOk() (*boolAsInt, bool) {
	if o == nil || IsNil(o.HstsSubdomains) {
		return nil, false
	}
	return o.HstsSubdomains, true
}

// HasHstsSubdomains returns a boolean if a field has been set.
func (o *RedirectionHostGetResponse) HasHstsSubdomains() bool {
	if o != nil && !IsNil(o.HstsSubdomains) {
		return true
	}

	return false
}

// SetHstsSubdomains gets a reference to the given boolAsInt and assigns it to the HstsSubdomains field.
func (o *RedirectionHostGetResponse) SetHstsSubdomains(v boolAsInt) {
	o.HstsSubdomains = &v
}

// GetHttp2Support returns the Http2Support field value if set, zero value otherwise.
func (o *RedirectionHostGetResponse) GetHttp2Support() boolAsInt {
	if o == nil || IsNil(o.Http2Support) {
		var ret boolAsInt
		return ret
	}
	return *o.Http2Support
}

// GetHttp2SupportOk returns a tuple with the Http2Support field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RedirectionHostGetResponse) GetHttp2SupportOk() (*boolAsInt, bool) {
	if o == nil || IsNil(o.Http2Support) {
		return nil, false
	}
	return o.Http2Support, true
}

// HasHttp2Support returns a boolean if a field has been set.
func (o *RedirectionHostGetResponse) HasHttp2Support() bool {
	if o != nil && !IsNil(o.Http2Support) {
		return true
	}

	return false
}

// SetHttp2Support gets a reference to the given boolAsInt and assigns it to the Http2Support field.
func (o *RedirectionHostGetResponse) SetHttp2Support(v boolAsInt) {
	o.Http2Support = &v
}

// GetBlockExploits returns the BlockExploits field value if set, zero value otherwise.
func (o *RedirectionHostGetResponse) GetBlockExploits() boolAsInt {
	if o == nil || IsNil(o.BlockExploits) {
		var ret boolAsInt
		return ret
	}
	return *o.BlockExploits
}

// GetBlockExploitsOk returns a tuple with the BlockExploits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RedirectionHostGetResponse) GetBlockExploitsOk() (*boolAsInt, bool) {
	if o == nil || IsNil(o.BlockExploits) {
		return nil, false
	}
	return o.BlockExploits, true
}

// HasBlockExploits returns a boolean if a field has been set.
func (o *RedirectionHostGetResponse) HasBlockExploits() bool {
	if o != nil && !IsNil(o.BlockExploits) {
		return true
	}

	return false
}

// SetBlockExploits gets a reference to the given boolAsInt and assigns it to the BlockExploits field.
func (o *RedirectionHostGetResponse) SetBlockExploits(v boolAsInt) {
	o.BlockExploits = &v
}

// GetAdvancedConfig returns the AdvancedConfig field value if set, zero value otherwise.
func (o *RedirectionHostGetResponse) GetAdvancedConfig() string {
	if o == nil || IsNil(o.AdvancedConfig) {
		var ret string
		return ret
	}
	return *o.AdvancedConfig
}

// GetAdvancedConfigOk returns a tuple with the AdvancedConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RedirectionHostGetResponse) GetAdvancedConfigOk() (*string, bool) {
	if o == nil || IsNil(o.AdvancedConfig) {
		return nil, false
	}
	return o.AdvancedConfig, true
}

// HasAdvancedConfig returns a boolean if a field has been set.
func (o *RedirectionHostGetResponse) HasAdvancedConfig() bool {
	if o != nil && !IsNil(o.AdvancedConfig) {
		return true
	}

	return false
}

// SetAdvancedConfig gets a reference to the given string and assigns it to the AdvancedConfig field.
func (o *RedirectionHostGetResponse) SetAdvancedConfig(v string) {
	o.AdvancedConfig = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *RedirectionHostGetResponse) GetEnabled() boolAsInt {
	if o == nil || IsNil(o.Enabled) {
		var ret boolAsInt
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RedirectionHostGetResponse) GetEnabledOk() (*boolAsInt, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *RedirectionHostGetResponse) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given boolAsInt and assigns it to the Enabled field.
func (o *RedirectionHostGetResponse) SetEnabled(v boolAsInt) {
	o.Enabled = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *RedirectionHostGetResponse) GetMeta() map[string]interface{} {
	if o == nil || IsNil(o.Meta) {
		var ret map[string]interface{}
		return ret
	}
	return o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RedirectionHostGetResponse) GetMetaOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Meta) {
		return map[string]interface{}{}, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *RedirectionHostGetResponse) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given map[string]interface{} and assigns it to the Meta field.
func (o *RedirectionHostGetResponse) SetMeta(v map[string]interface{}) {
	o.Meta = v
}

func (o RedirectionHostGetResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RedirectionHostGetResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CreatedOn) {
		toSerialize["created_on"] = o.CreatedOn
	}
	if !IsNil(o.ModifiedOn) {
		toSerialize["modified_on"] = o.ModifiedOn
	}
	if !IsNil(o.DomainNames) {
		toSerialize["domain_names"] = o.DomainNames
	}
	if !IsNil(o.ForwardHttpCode) {
		toSerialize["forward_http_code"] = o.ForwardHttpCode
	}
	if !IsNil(o.ForwardScheme) {
		toSerialize["forward_scheme"] = o.ForwardScheme
	}
	if !IsNil(o.ForwardDomainName) {
		toSerialize["forward_domain_name"] = o.ForwardDomainName
	}
	if !IsNil(o.PreservePath) {
		toSerialize["preserve_path"] = o.PreservePath
	}
	if !IsNil(o.CertificateId) {
		toSerialize["certificate_id"] = o.CertificateId
	}
	if !IsNil(o.SslForced) {
		toSerialize["ssl_forced"] = o.SslForced
	}
	if !IsNil(o.HstsEnabled) {
		toSerialize["hsts_enabled"] = o.HstsEnabled
	}
	if !IsNil(o.HstsSubdomains) {
		toSerialize["hsts_subdomains"] = o.HstsSubdomains
	}
	if !IsNil(o.Http2Support) {
		toSerialize["http2_support"] = o.Http2Support
	}
	if !IsNil(o.BlockExploits) {
		toSerialize["block_exploits"] = o.BlockExploits
	}
	if !IsNil(o.AdvancedConfig) {
		toSerialize["advanced_config"] = o.AdvancedConfig
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableRedirectionHostGetResponse struct {
	value *RedirectionHostGetResponse
	isSet bool
}

func (v NullableRedirectionHostGetResponse) Get() *RedirectionHostGetResponse {
	return v.value
}

func (v *NullableRedirectionHostGetResponse) Set(val *RedirectionHostGetResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRedirectionHostGetResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRedirectionHostGetResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRedirectionHostGetResponse(val *RedirectionHostGetResponse) *NullableRedirectionHostGetResponse {
	return &NullableRedirectionHostGetResponse{value: val, isSet: true}
}

func (v NullableRedirectionHostGetResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRedirectionHostGetResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


