/*
Nginx Proxy Manager API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.12.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nginxproxymanager

import (
	"encoding/json"
)

// checks if the UpdateUserPermissionsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateUserPermissionsRequest{}

// UpdateUserPermissionsRequest struct for UpdateUserPermissionsRequest
type UpdateUserPermissionsRequest struct {
	// Visibility Type
	Visibility *string `json:"visibility,omitempty"`
	// Access Lists Permissions
	AccessLists *string `json:"access_lists,omitempty"`
	// 404 Hosts Permissions
	DeadHosts *string `json:"dead_hosts,omitempty"`
	// Proxy Hosts Permissions
	ProxyHosts *string `json:"proxy_hosts,omitempty"`
	// Redirection Permissions
	RedirectionHosts *string `json:"redirection_hosts,omitempty"`
	// Streams Permissions
	Streams *string `json:"streams,omitempty"`
	// Certificates Permissions
	Certificates *string `json:"certificates,omitempty"`
}

// NewUpdateUserPermissionsRequest instantiates a new UpdateUserPermissionsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateUserPermissionsRequest() *UpdateUserPermissionsRequest {
	this := UpdateUserPermissionsRequest{}
	return &this
}

// NewUpdateUserPermissionsRequestWithDefaults instantiates a new UpdateUserPermissionsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateUserPermissionsRequestWithDefaults() *UpdateUserPermissionsRequest {
	this := UpdateUserPermissionsRequest{}
	return &this
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *UpdateUserPermissionsRequest) GetVisibility() string {
	if o == nil || IsNil(o.Visibility) {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserPermissionsRequest) GetVisibilityOk() (*string, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *UpdateUserPermissionsRequest) HasVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *UpdateUserPermissionsRequest) SetVisibility(v string) {
	o.Visibility = &v
}

// GetAccessLists returns the AccessLists field value if set, zero value otherwise.
func (o *UpdateUserPermissionsRequest) GetAccessLists() string {
	if o == nil || IsNil(o.AccessLists) {
		var ret string
		return ret
	}
	return *o.AccessLists
}

// GetAccessListsOk returns a tuple with the AccessLists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserPermissionsRequest) GetAccessListsOk() (*string, bool) {
	if o == nil || IsNil(o.AccessLists) {
		return nil, false
	}
	return o.AccessLists, true
}

// HasAccessLists returns a boolean if a field has been set.
func (o *UpdateUserPermissionsRequest) HasAccessLists() bool {
	if o != nil && !IsNil(o.AccessLists) {
		return true
	}

	return false
}

// SetAccessLists gets a reference to the given string and assigns it to the AccessLists field.
func (o *UpdateUserPermissionsRequest) SetAccessLists(v string) {
	o.AccessLists = &v
}

// GetDeadHosts returns the DeadHosts field value if set, zero value otherwise.
func (o *UpdateUserPermissionsRequest) GetDeadHosts() string {
	if o == nil || IsNil(o.DeadHosts) {
		var ret string
		return ret
	}
	return *o.DeadHosts
}

// GetDeadHostsOk returns a tuple with the DeadHosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserPermissionsRequest) GetDeadHostsOk() (*string, bool) {
	if o == nil || IsNil(o.DeadHosts) {
		return nil, false
	}
	return o.DeadHosts, true
}

// HasDeadHosts returns a boolean if a field has been set.
func (o *UpdateUserPermissionsRequest) HasDeadHosts() bool {
	if o != nil && !IsNil(o.DeadHosts) {
		return true
	}

	return false
}

// SetDeadHosts gets a reference to the given string and assigns it to the DeadHosts field.
func (o *UpdateUserPermissionsRequest) SetDeadHosts(v string) {
	o.DeadHosts = &v
}

// GetProxyHosts returns the ProxyHosts field value if set, zero value otherwise.
func (o *UpdateUserPermissionsRequest) GetProxyHosts() string {
	if o == nil || IsNil(o.ProxyHosts) {
		var ret string
		return ret
	}
	return *o.ProxyHosts
}

// GetProxyHostsOk returns a tuple with the ProxyHosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserPermissionsRequest) GetProxyHostsOk() (*string, bool) {
	if o == nil || IsNil(o.ProxyHosts) {
		return nil, false
	}
	return o.ProxyHosts, true
}

// HasProxyHosts returns a boolean if a field has been set.
func (o *UpdateUserPermissionsRequest) HasProxyHosts() bool {
	if o != nil && !IsNil(o.ProxyHosts) {
		return true
	}

	return false
}

// SetProxyHosts gets a reference to the given string and assigns it to the ProxyHosts field.
func (o *UpdateUserPermissionsRequest) SetProxyHosts(v string) {
	o.ProxyHosts = &v
}

// GetRedirectionHosts returns the RedirectionHosts field value if set, zero value otherwise.
func (o *UpdateUserPermissionsRequest) GetRedirectionHosts() string {
	if o == nil || IsNil(o.RedirectionHosts) {
		var ret string
		return ret
	}
	return *o.RedirectionHosts
}

// GetRedirectionHostsOk returns a tuple with the RedirectionHosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserPermissionsRequest) GetRedirectionHostsOk() (*string, bool) {
	if o == nil || IsNil(o.RedirectionHosts) {
		return nil, false
	}
	return o.RedirectionHosts, true
}

// HasRedirectionHosts returns a boolean if a field has been set.
func (o *UpdateUserPermissionsRequest) HasRedirectionHosts() bool {
	if o != nil && !IsNil(o.RedirectionHosts) {
		return true
	}

	return false
}

// SetRedirectionHosts gets a reference to the given string and assigns it to the RedirectionHosts field.
func (o *UpdateUserPermissionsRequest) SetRedirectionHosts(v string) {
	o.RedirectionHosts = &v
}

// GetStreams returns the Streams field value if set, zero value otherwise.
func (o *UpdateUserPermissionsRequest) GetStreams() string {
	if o == nil || IsNil(o.Streams) {
		var ret string
		return ret
	}
	return *o.Streams
}

// GetStreamsOk returns a tuple with the Streams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserPermissionsRequest) GetStreamsOk() (*string, bool) {
	if o == nil || IsNil(o.Streams) {
		return nil, false
	}
	return o.Streams, true
}

// HasStreams returns a boolean if a field has been set.
func (o *UpdateUserPermissionsRequest) HasStreams() bool {
	if o != nil && !IsNil(o.Streams) {
		return true
	}

	return false
}

// SetStreams gets a reference to the given string and assigns it to the Streams field.
func (o *UpdateUserPermissionsRequest) SetStreams(v string) {
	o.Streams = &v
}

// GetCertificates returns the Certificates field value if set, zero value otherwise.
func (o *UpdateUserPermissionsRequest) GetCertificates() string {
	if o == nil || IsNil(o.Certificates) {
		var ret string
		return ret
	}
	return *o.Certificates
}

// GetCertificatesOk returns a tuple with the Certificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserPermissionsRequest) GetCertificatesOk() (*string, bool) {
	if o == nil || IsNil(o.Certificates) {
		return nil, false
	}
	return o.Certificates, true
}

// HasCertificates returns a boolean if a field has been set.
func (o *UpdateUserPermissionsRequest) HasCertificates() bool {
	if o != nil && !IsNil(o.Certificates) {
		return true
	}

	return false
}

// SetCertificates gets a reference to the given string and assigns it to the Certificates field.
func (o *UpdateUserPermissionsRequest) SetCertificates(v string) {
	o.Certificates = &v
}

func (o UpdateUserPermissionsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateUserPermissionsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	if !IsNil(o.AccessLists) {
		toSerialize["access_lists"] = o.AccessLists
	}
	if !IsNil(o.DeadHosts) {
		toSerialize["dead_hosts"] = o.DeadHosts
	}
	if !IsNil(o.ProxyHosts) {
		toSerialize["proxy_hosts"] = o.ProxyHosts
	}
	if !IsNil(o.RedirectionHosts) {
		toSerialize["redirection_hosts"] = o.RedirectionHosts
	}
	if !IsNil(o.Streams) {
		toSerialize["streams"] = o.Streams
	}
	if !IsNil(o.Certificates) {
		toSerialize["certificates"] = o.Certificates
	}
	return toSerialize, nil
}

type NullableUpdateUserPermissionsRequest struct {
	value *UpdateUserPermissionsRequest
	isSet bool
}

func (v NullableUpdateUserPermissionsRequest) Get() *UpdateUserPermissionsRequest {
	return v.value
}

func (v *NullableUpdateUserPermissionsRequest) Set(val *UpdateUserPermissionsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateUserPermissionsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateUserPermissionsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateUserPermissionsRequest(val *UpdateUserPermissionsRequest) *NullableUpdateUserPermissionsRequest {
	return &NullableUpdateUserPermissionsRequest{value: val, isSet: true}
}

func (v NullableUpdateUserPermissionsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateUserPermissionsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


