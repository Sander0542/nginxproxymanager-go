/*
Nginx Proxy Manager API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.12.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nginxproxymanager

import (
	"encoding/json"
	"fmt"
)

// checks if the GetDeadHosts200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetDeadHosts200ResponseInner{}

// GetDeadHosts200ResponseInner 404 Host object
type GetDeadHosts200ResponseInner struct {
	// Unique identifier
	Id int64 `json:"id"`
	// Date and time of creation
	CreatedOn string `json:"created_on"`
	// Date and time of last update
	ModifiedOn string `json:"modified_on"`
	// User ID
	OwnerUserId int64 `json:"owner_user_id"`
	// Domain Names separated by a comma
	DomainNames []string `json:"domain_names"`
	CertificateId GetProxyHosts200ResponseInnerCertificateId `json:"certificate_id"`
	// Is SSL Forced
	SslForced bool `json:"ssl_forced"`
	// Is HSTS Enabled
	HstsEnabled bool `json:"hsts_enabled"`
	// Is HSTS applicable to all subdomains
	HstsSubdomains bool `json:"hsts_subdomains"`
	// HTTP2 Protocol Support
	Http2Support bool `json:"http2_support"`
	AdvancedConfig string `json:"advanced_config"`
	// Is Enabled
	Enabled bool `json:"enabled"`
	Meta map[string]interface{} `json:"meta"`
	AdditionalProperties map[string]interface{}
}

type _GetDeadHosts200ResponseInner GetDeadHosts200ResponseInner

// NewGetDeadHosts200ResponseInner instantiates a new GetDeadHosts200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetDeadHosts200ResponseInner(id int64, createdOn string, modifiedOn string, ownerUserId int64, domainNames []string, certificateId GetProxyHosts200ResponseInnerCertificateId, sslForced bool, hstsEnabled bool, hstsSubdomains bool, http2Support bool, advancedConfig string, enabled bool, meta map[string]interface{}) *GetDeadHosts200ResponseInner {
	this := GetDeadHosts200ResponseInner{}
	this.Id = id
	this.CreatedOn = createdOn
	this.ModifiedOn = modifiedOn
	this.OwnerUserId = ownerUserId
	this.DomainNames = domainNames
	this.CertificateId = certificateId
	this.SslForced = sslForced
	this.HstsEnabled = hstsEnabled
	this.HstsSubdomains = hstsSubdomains
	this.Http2Support = http2Support
	this.AdvancedConfig = advancedConfig
	this.Enabled = enabled
	this.Meta = meta
	return &this
}

// NewGetDeadHosts200ResponseInnerWithDefaults instantiates a new GetDeadHosts200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetDeadHosts200ResponseInnerWithDefaults() *GetDeadHosts200ResponseInner {
	this := GetDeadHosts200ResponseInner{}
	return &this
}

// GetId returns the Id field value
func (o *GetDeadHosts200ResponseInner) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GetDeadHosts200ResponseInner) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GetDeadHosts200ResponseInner) SetId(v int64) {
	o.Id = v
}

// GetCreatedOn returns the CreatedOn field value
func (o *GetDeadHosts200ResponseInner) GetCreatedOn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedOn
}

// GetCreatedOnOk returns a tuple with the CreatedOn field value
// and a boolean to check if the value has been set.
func (o *GetDeadHosts200ResponseInner) GetCreatedOnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedOn, true
}

// SetCreatedOn sets field value
func (o *GetDeadHosts200ResponseInner) SetCreatedOn(v string) {
	o.CreatedOn = v
}

// GetModifiedOn returns the ModifiedOn field value
func (o *GetDeadHosts200ResponseInner) GetModifiedOn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModifiedOn
}

// GetModifiedOnOk returns a tuple with the ModifiedOn field value
// and a boolean to check if the value has been set.
func (o *GetDeadHosts200ResponseInner) GetModifiedOnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedOn, true
}

// SetModifiedOn sets field value
func (o *GetDeadHosts200ResponseInner) SetModifiedOn(v string) {
	o.ModifiedOn = v
}

// GetOwnerUserId returns the OwnerUserId field value
func (o *GetDeadHosts200ResponseInner) GetOwnerUserId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.OwnerUserId
}

// GetOwnerUserIdOk returns a tuple with the OwnerUserId field value
// and a boolean to check if the value has been set.
func (o *GetDeadHosts200ResponseInner) GetOwnerUserIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OwnerUserId, true
}

// SetOwnerUserId sets field value
func (o *GetDeadHosts200ResponseInner) SetOwnerUserId(v int64) {
	o.OwnerUserId = v
}

// GetDomainNames returns the DomainNames field value
func (o *GetDeadHosts200ResponseInner) GetDomainNames() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.DomainNames
}

// GetDomainNamesOk returns a tuple with the DomainNames field value
// and a boolean to check if the value has been set.
func (o *GetDeadHosts200ResponseInner) GetDomainNamesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DomainNames, true
}

// SetDomainNames sets field value
func (o *GetDeadHosts200ResponseInner) SetDomainNames(v []string) {
	o.DomainNames = v
}

// GetCertificateId returns the CertificateId field value
func (o *GetDeadHosts200ResponseInner) GetCertificateId() GetProxyHosts200ResponseInnerCertificateId {
	if o == nil {
		var ret GetProxyHosts200ResponseInnerCertificateId
		return ret
	}

	return o.CertificateId
}

// GetCertificateIdOk returns a tuple with the CertificateId field value
// and a boolean to check if the value has been set.
func (o *GetDeadHosts200ResponseInner) GetCertificateIdOk() (*GetProxyHosts200ResponseInnerCertificateId, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CertificateId, true
}

// SetCertificateId sets field value
func (o *GetDeadHosts200ResponseInner) SetCertificateId(v GetProxyHosts200ResponseInnerCertificateId) {
	o.CertificateId = v
}

// GetSslForced returns the SslForced field value
func (o *GetDeadHosts200ResponseInner) GetSslForced() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.SslForced
}

// GetSslForcedOk returns a tuple with the SslForced field value
// and a boolean to check if the value has been set.
func (o *GetDeadHosts200ResponseInner) GetSslForcedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SslForced, true
}

// SetSslForced sets field value
func (o *GetDeadHosts200ResponseInner) SetSslForced(v bool) {
	o.SslForced = v
}

// GetHstsEnabled returns the HstsEnabled field value
func (o *GetDeadHosts200ResponseInner) GetHstsEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HstsEnabled
}

// GetHstsEnabledOk returns a tuple with the HstsEnabled field value
// and a boolean to check if the value has been set.
func (o *GetDeadHosts200ResponseInner) GetHstsEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HstsEnabled, true
}

// SetHstsEnabled sets field value
func (o *GetDeadHosts200ResponseInner) SetHstsEnabled(v bool) {
	o.HstsEnabled = v
}

// GetHstsSubdomains returns the HstsSubdomains field value
func (o *GetDeadHosts200ResponseInner) GetHstsSubdomains() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HstsSubdomains
}

// GetHstsSubdomainsOk returns a tuple with the HstsSubdomains field value
// and a boolean to check if the value has been set.
func (o *GetDeadHosts200ResponseInner) GetHstsSubdomainsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HstsSubdomains, true
}

// SetHstsSubdomains sets field value
func (o *GetDeadHosts200ResponseInner) SetHstsSubdomains(v bool) {
	o.HstsSubdomains = v
}

// GetHttp2Support returns the Http2Support field value
func (o *GetDeadHosts200ResponseInner) GetHttp2Support() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Http2Support
}

// GetHttp2SupportOk returns a tuple with the Http2Support field value
// and a boolean to check if the value has been set.
func (o *GetDeadHosts200ResponseInner) GetHttp2SupportOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Http2Support, true
}

// SetHttp2Support sets field value
func (o *GetDeadHosts200ResponseInner) SetHttp2Support(v bool) {
	o.Http2Support = v
}

// GetAdvancedConfig returns the AdvancedConfig field value
func (o *GetDeadHosts200ResponseInner) GetAdvancedConfig() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AdvancedConfig
}

// GetAdvancedConfigOk returns a tuple with the AdvancedConfig field value
// and a boolean to check if the value has been set.
func (o *GetDeadHosts200ResponseInner) GetAdvancedConfigOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AdvancedConfig, true
}

// SetAdvancedConfig sets field value
func (o *GetDeadHosts200ResponseInner) SetAdvancedConfig(v string) {
	o.AdvancedConfig = v
}

// GetEnabled returns the Enabled field value
func (o *GetDeadHosts200ResponseInner) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *GetDeadHosts200ResponseInner) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *GetDeadHosts200ResponseInner) SetEnabled(v bool) {
	o.Enabled = v
}

// GetMeta returns the Meta field value
func (o *GetDeadHosts200ResponseInner) GetMeta() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Meta
}

// GetMetaOk returns a tuple with the Meta field value
// and a boolean to check if the value has been set.
func (o *GetDeadHosts200ResponseInner) GetMetaOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Meta, true
}

// SetMeta sets field value
func (o *GetDeadHosts200ResponseInner) SetMeta(v map[string]interface{}) {
	o.Meta = v
}

func (o GetDeadHosts200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetDeadHosts200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["created_on"] = o.CreatedOn
	toSerialize["modified_on"] = o.ModifiedOn
	toSerialize["owner_user_id"] = o.OwnerUserId
	toSerialize["domain_names"] = o.DomainNames
	toSerialize["certificate_id"] = o.CertificateId
	toSerialize["ssl_forced"] = o.SslForced
	toSerialize["hsts_enabled"] = o.HstsEnabled
	toSerialize["hsts_subdomains"] = o.HstsSubdomains
	toSerialize["http2_support"] = o.Http2Support
	toSerialize["advanced_config"] = o.AdvancedConfig
	toSerialize["enabled"] = o.Enabled
	toSerialize["meta"] = o.Meta

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetDeadHosts200ResponseInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"created_on",
		"modified_on",
		"owner_user_id",
		"domain_names",
		"certificate_id",
		"ssl_forced",
		"hsts_enabled",
		"hsts_subdomains",
		"http2_support",
		"advanced_config",
		"enabled",
		"meta",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetDeadHosts200ResponseInner := _GetDeadHosts200ResponseInner{}

	err = json.Unmarshal(data, &varGetDeadHosts200ResponseInner)

	if err != nil {
		return err
	}

	*o = GetDeadHosts200ResponseInner(varGetDeadHosts200ResponseInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "created_on")
		delete(additionalProperties, "modified_on")
		delete(additionalProperties, "owner_user_id")
		delete(additionalProperties, "domain_names")
		delete(additionalProperties, "certificate_id")
		delete(additionalProperties, "ssl_forced")
		delete(additionalProperties, "hsts_enabled")
		delete(additionalProperties, "hsts_subdomains")
		delete(additionalProperties, "http2_support")
		delete(additionalProperties, "advanced_config")
		delete(additionalProperties, "enabled")
		delete(additionalProperties, "meta")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetDeadHosts200ResponseInner struct {
	value *GetDeadHosts200ResponseInner
	isSet bool
}

func (v NullableGetDeadHosts200ResponseInner) Get() *GetDeadHosts200ResponseInner {
	return v.value
}

func (v *NullableGetDeadHosts200ResponseInner) Set(val *GetDeadHosts200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDeadHosts200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDeadHosts200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDeadHosts200ResponseInner(val *GetDeadHosts200ResponseInner) *NullableGetDeadHosts200ResponseInner {
	return &NullableGetDeadHosts200ResponseInner{value: val, isSet: true}
}

func (v NullableGetDeadHosts200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDeadHosts200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


