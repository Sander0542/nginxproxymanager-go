/*
Nginx Proxy Manager API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.x.x
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nginxproxymanager

import (
	"encoding/json"
	"time"
)

// checks if the TokenCreateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TokenCreateResponse{}

// TokenCreateResponse struct for TokenCreateResponse
type TokenCreateResponse struct {
	// JWT
	Token *string `json:"token,omitempty"`
	// Token expiry time
	Expires *time.Time `json:"expires,omitempty"`
}

// NewTokenCreateResponse instantiates a new TokenCreateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenCreateResponse() *TokenCreateResponse {
	this := TokenCreateResponse{}
	return &this
}

// NewTokenCreateResponseWithDefaults instantiates a new TokenCreateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenCreateResponseWithDefaults() *TokenCreateResponse {
	this := TokenCreateResponse{}
	return &this
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *TokenCreateResponse) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenCreateResponse) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *TokenCreateResponse) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *TokenCreateResponse) SetToken(v string) {
	o.Token = &v
}

// GetExpires returns the Expires field value if set, zero value otherwise.
func (o *TokenCreateResponse) GetExpires() time.Time {
	if o == nil || IsNil(o.Expires) {
		var ret time.Time
		return ret
	}
	return *o.Expires
}

// GetExpiresOk returns a tuple with the Expires field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenCreateResponse) GetExpiresOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Expires) {
		return nil, false
	}
	return o.Expires, true
}

// HasExpires returns a boolean if a field has been set.
func (o *TokenCreateResponse) HasExpires() bool {
	if o != nil && !IsNil(o.Expires) {
		return true
	}

	return false
}

// SetExpires gets a reference to the given time.Time and assigns it to the Expires field.
func (o *TokenCreateResponse) SetExpires(v time.Time) {
	o.Expires = &v
}

func (o TokenCreateResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TokenCreateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.Expires) {
		toSerialize["expires"] = o.Expires
	}
	return toSerialize, nil
}

type NullableTokenCreateResponse struct {
	value *TokenCreateResponse
	isSet bool
}

func (v NullableTokenCreateResponse) Get() *TokenCreateResponse {
	return v.value
}

func (v *NullableTokenCreateResponse) Set(val *TokenCreateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenCreateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenCreateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenCreateResponse(val *TokenCreateResponse) *NullableTokenCreateResponse {
	return &NullableTokenCreateResponse{value: val, isSet: true}
}

func (v NullableTokenCreateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenCreateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


