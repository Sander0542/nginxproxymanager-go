/*
Nginx Proxy Manager API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.12.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nginxproxymanager

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateStream201Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateStream201Response{}

// CreateStream201Response Stream object
type CreateStream201Response struct {
	// Unique identifier
	Id int64 `json:"id"`
	// Date and time of creation
	CreatedOn string `json:"created_on"`
	// Date and time of last update
	ModifiedOn string `json:"modified_on"`
	// User ID
	OwnerUserId int64 `json:"owner_user_id"`
	IncomingPort int64 `json:"incoming_port"`
	ForwardingHost CreateStreamRequestForwardingHost `json:"forwarding_host"`
	ForwardingPort int64 `json:"forwarding_port"`
	TcpForwarding bool `json:"tcp_forwarding"`
	UdpForwarding bool `json:"udp_forwarding"`
	// Is Enabled
	Enabled bool `json:"enabled"`
	CertificateId *GetProxyHosts200ResponseInnerCertificateId `json:"certificate_id,omitempty"`
	Meta map[string]interface{} `json:"meta"`
	Owner *GetCertificates200ResponseInnerOwner `json:"owner,omitempty"`
	Certificate *GetProxyHosts200ResponseInnerCertificate `json:"certificate,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateStream201Response CreateStream201Response

// NewCreateStream201Response instantiates a new CreateStream201Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateStream201Response(id int64, createdOn string, modifiedOn string, ownerUserId int64, incomingPort int64, forwardingHost CreateStreamRequestForwardingHost, forwardingPort int64, tcpForwarding bool, udpForwarding bool, enabled bool, meta map[string]interface{}) *CreateStream201Response {
	this := CreateStream201Response{}
	this.Id = id
	this.CreatedOn = createdOn
	this.ModifiedOn = modifiedOn
	this.OwnerUserId = ownerUserId
	this.IncomingPort = incomingPort
	this.ForwardingHost = forwardingHost
	this.ForwardingPort = forwardingPort
	this.TcpForwarding = tcpForwarding
	this.UdpForwarding = udpForwarding
	this.Enabled = enabled
	this.Meta = meta
	return &this
}

// NewCreateStream201ResponseWithDefaults instantiates a new CreateStream201Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateStream201ResponseWithDefaults() *CreateStream201Response {
	this := CreateStream201Response{}
	return &this
}

// GetId returns the Id field value
func (o *CreateStream201Response) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CreateStream201Response) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CreateStream201Response) SetId(v int64) {
	o.Id = v
}

// GetCreatedOn returns the CreatedOn field value
func (o *CreateStream201Response) GetCreatedOn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedOn
}

// GetCreatedOnOk returns a tuple with the CreatedOn field value
// and a boolean to check if the value has been set.
func (o *CreateStream201Response) GetCreatedOnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedOn, true
}

// SetCreatedOn sets field value
func (o *CreateStream201Response) SetCreatedOn(v string) {
	o.CreatedOn = v
}

// GetModifiedOn returns the ModifiedOn field value
func (o *CreateStream201Response) GetModifiedOn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModifiedOn
}

// GetModifiedOnOk returns a tuple with the ModifiedOn field value
// and a boolean to check if the value has been set.
func (o *CreateStream201Response) GetModifiedOnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedOn, true
}

// SetModifiedOn sets field value
func (o *CreateStream201Response) SetModifiedOn(v string) {
	o.ModifiedOn = v
}

// GetOwnerUserId returns the OwnerUserId field value
func (o *CreateStream201Response) GetOwnerUserId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.OwnerUserId
}

// GetOwnerUserIdOk returns a tuple with the OwnerUserId field value
// and a boolean to check if the value has been set.
func (o *CreateStream201Response) GetOwnerUserIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OwnerUserId, true
}

// SetOwnerUserId sets field value
func (o *CreateStream201Response) SetOwnerUserId(v int64) {
	o.OwnerUserId = v
}

// GetIncomingPort returns the IncomingPort field value
func (o *CreateStream201Response) GetIncomingPort() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.IncomingPort
}

// GetIncomingPortOk returns a tuple with the IncomingPort field value
// and a boolean to check if the value has been set.
func (o *CreateStream201Response) GetIncomingPortOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IncomingPort, true
}

// SetIncomingPort sets field value
func (o *CreateStream201Response) SetIncomingPort(v int64) {
	o.IncomingPort = v
}

// GetForwardingHost returns the ForwardingHost field value
func (o *CreateStream201Response) GetForwardingHost() CreateStreamRequestForwardingHost {
	if o == nil {
		var ret CreateStreamRequestForwardingHost
		return ret
	}

	return o.ForwardingHost
}

// GetForwardingHostOk returns a tuple with the ForwardingHost field value
// and a boolean to check if the value has been set.
func (o *CreateStream201Response) GetForwardingHostOk() (*CreateStreamRequestForwardingHost, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ForwardingHost, true
}

// SetForwardingHost sets field value
func (o *CreateStream201Response) SetForwardingHost(v CreateStreamRequestForwardingHost) {
	o.ForwardingHost = v
}

// GetForwardingPort returns the ForwardingPort field value
func (o *CreateStream201Response) GetForwardingPort() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ForwardingPort
}

// GetForwardingPortOk returns a tuple with the ForwardingPort field value
// and a boolean to check if the value has been set.
func (o *CreateStream201Response) GetForwardingPortOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ForwardingPort, true
}

// SetForwardingPort sets field value
func (o *CreateStream201Response) SetForwardingPort(v int64) {
	o.ForwardingPort = v
}

// GetTcpForwarding returns the TcpForwarding field value
func (o *CreateStream201Response) GetTcpForwarding() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.TcpForwarding
}

// GetTcpForwardingOk returns a tuple with the TcpForwarding field value
// and a boolean to check if the value has been set.
func (o *CreateStream201Response) GetTcpForwardingOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TcpForwarding, true
}

// SetTcpForwarding sets field value
func (o *CreateStream201Response) SetTcpForwarding(v bool) {
	o.TcpForwarding = v
}

// GetUdpForwarding returns the UdpForwarding field value
func (o *CreateStream201Response) GetUdpForwarding() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.UdpForwarding
}

// GetUdpForwardingOk returns a tuple with the UdpForwarding field value
// and a boolean to check if the value has been set.
func (o *CreateStream201Response) GetUdpForwardingOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UdpForwarding, true
}

// SetUdpForwarding sets field value
func (o *CreateStream201Response) SetUdpForwarding(v bool) {
	o.UdpForwarding = v
}

// GetEnabled returns the Enabled field value
func (o *CreateStream201Response) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *CreateStream201Response) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *CreateStream201Response) SetEnabled(v bool) {
	o.Enabled = v
}

// GetCertificateId returns the CertificateId field value if set, zero value otherwise.
func (o *CreateStream201Response) GetCertificateId() GetProxyHosts200ResponseInnerCertificateId {
	if o == nil || IsNil(o.CertificateId) {
		var ret GetProxyHosts200ResponseInnerCertificateId
		return ret
	}
	return *o.CertificateId
}

// GetCertificateIdOk returns a tuple with the CertificateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStream201Response) GetCertificateIdOk() (*GetProxyHosts200ResponseInnerCertificateId, bool) {
	if o == nil || IsNil(o.CertificateId) {
		return nil, false
	}
	return o.CertificateId, true
}

// HasCertificateId returns a boolean if a field has been set.
func (o *CreateStream201Response) HasCertificateId() bool {
	if o != nil && !IsNil(o.CertificateId) {
		return true
	}

	return false
}

// SetCertificateId gets a reference to the given GetProxyHosts200ResponseInnerCertificateId and assigns it to the CertificateId field.
func (o *CreateStream201Response) SetCertificateId(v GetProxyHosts200ResponseInnerCertificateId) {
	o.CertificateId = &v
}

// GetMeta returns the Meta field value
func (o *CreateStream201Response) GetMeta() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Meta
}

// GetMetaOk returns a tuple with the Meta field value
// and a boolean to check if the value has been set.
func (o *CreateStream201Response) GetMetaOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Meta, true
}

// SetMeta sets field value
func (o *CreateStream201Response) SetMeta(v map[string]interface{}) {
	o.Meta = v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *CreateStream201Response) GetOwner() GetCertificates200ResponseInnerOwner {
	if o == nil || IsNil(o.Owner) {
		var ret GetCertificates200ResponseInnerOwner
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStream201Response) GetOwnerOk() (*GetCertificates200ResponseInnerOwner, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *CreateStream201Response) HasOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given GetCertificates200ResponseInnerOwner and assigns it to the Owner field.
func (o *CreateStream201Response) SetOwner(v GetCertificates200ResponseInnerOwner) {
	o.Owner = &v
}

// GetCertificate returns the Certificate field value if set, zero value otherwise.
func (o *CreateStream201Response) GetCertificate() GetProxyHosts200ResponseInnerCertificate {
	if o == nil || IsNil(o.Certificate) {
		var ret GetProxyHosts200ResponseInnerCertificate
		return ret
	}
	return *o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStream201Response) GetCertificateOk() (*GetProxyHosts200ResponseInnerCertificate, bool) {
	if o == nil || IsNil(o.Certificate) {
		return nil, false
	}
	return o.Certificate, true
}

// HasCertificate returns a boolean if a field has been set.
func (o *CreateStream201Response) HasCertificate() bool {
	if o != nil && !IsNil(o.Certificate) {
		return true
	}

	return false
}

// SetCertificate gets a reference to the given GetProxyHosts200ResponseInnerCertificate and assigns it to the Certificate field.
func (o *CreateStream201Response) SetCertificate(v GetProxyHosts200ResponseInnerCertificate) {
	o.Certificate = &v
}

func (o CreateStream201Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateStream201Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["created_on"] = o.CreatedOn
	toSerialize["modified_on"] = o.ModifiedOn
	toSerialize["owner_user_id"] = o.OwnerUserId
	toSerialize["incoming_port"] = o.IncomingPort
	toSerialize["forwarding_host"] = o.ForwardingHost
	toSerialize["forwarding_port"] = o.ForwardingPort
	toSerialize["tcp_forwarding"] = o.TcpForwarding
	toSerialize["udp_forwarding"] = o.UdpForwarding
	toSerialize["enabled"] = o.Enabled
	if !IsNil(o.CertificateId) {
		toSerialize["certificate_id"] = o.CertificateId
	}
	toSerialize["meta"] = o.Meta
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	if !IsNil(o.Certificate) {
		toSerialize["certificate"] = o.Certificate
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateStream201Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"created_on",
		"modified_on",
		"owner_user_id",
		"incoming_port",
		"forwarding_host",
		"forwarding_port",
		"tcp_forwarding",
		"udp_forwarding",
		"enabled",
		"meta",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateStream201Response := _CreateStream201Response{}

	err = json.Unmarshal(data, &varCreateStream201Response)

	if err != nil {
		return err
	}

	*o = CreateStream201Response(varCreateStream201Response)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "created_on")
		delete(additionalProperties, "modified_on")
		delete(additionalProperties, "owner_user_id")
		delete(additionalProperties, "incoming_port")
		delete(additionalProperties, "forwarding_host")
		delete(additionalProperties, "forwarding_port")
		delete(additionalProperties, "tcp_forwarding")
		delete(additionalProperties, "udp_forwarding")
		delete(additionalProperties, "enabled")
		delete(additionalProperties, "certificate_id")
		delete(additionalProperties, "meta")
		delete(additionalProperties, "owner")
		delete(additionalProperties, "certificate")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateStream201Response struct {
	value *CreateStream201Response
	isSet bool
}

func (v NullableCreateStream201Response) Get() *CreateStream201Response {
	return v.value
}

func (v *NullableCreateStream201Response) Set(val *CreateStream201Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateStream201Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateStream201Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateStream201Response(val *CreateStream201Response) *NullableCreateStream201Response {
	return &NullableCreateStream201Response{value: val, isSet: true}
}

func (v NullableCreateStream201Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateStream201Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


