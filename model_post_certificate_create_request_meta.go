/*
Nginx Proxy Manager API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.x.x
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nginxproxymanager

import (
	"encoding/json"
)

// checks if the PostCertificateCreateRequestMeta type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostCertificateCreateRequestMeta{}

// PostCertificateCreateRequestMeta struct for PostCertificateCreateRequestMeta
type PostCertificateCreateRequestMeta struct {
	LetsencryptEmail *string `json:"letsencrypt_email,omitempty"`
	LetsencryptAgree *boolAsInt `json:"letsencrypt_agree,omitempty"`
	DnsChallenge *boolAsInt `json:"dns_challenge,omitempty"`
	DnsProvider *string `json:"dns_provider,omitempty"`
	DnsProviderCredentials *string `json:"dns_provider_credentials,omitempty"`
	PropagationSeconds *int64 `json:"propagation_seconds,omitempty"`
}

// NewPostCertificateCreateRequestMeta instantiates a new PostCertificateCreateRequestMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostCertificateCreateRequestMeta() *PostCertificateCreateRequestMeta {
	this := PostCertificateCreateRequestMeta{}
	return &this
}

// NewPostCertificateCreateRequestMetaWithDefaults instantiates a new PostCertificateCreateRequestMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostCertificateCreateRequestMetaWithDefaults() *PostCertificateCreateRequestMeta {
	this := PostCertificateCreateRequestMeta{}
	return &this
}

// GetLetsencryptEmail returns the LetsencryptEmail field value if set, zero value otherwise.
func (o *PostCertificateCreateRequestMeta) GetLetsencryptEmail() string {
	if o == nil || IsNil(o.LetsencryptEmail) {
		var ret string
		return ret
	}
	return *o.LetsencryptEmail
}

// GetLetsencryptEmailOk returns a tuple with the LetsencryptEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostCertificateCreateRequestMeta) GetLetsencryptEmailOk() (*string, bool) {
	if o == nil || IsNil(o.LetsencryptEmail) {
		return nil, false
	}
	return o.LetsencryptEmail, true
}

// HasLetsencryptEmail returns a boolean if a field has been set.
func (o *PostCertificateCreateRequestMeta) HasLetsencryptEmail() bool {
	if o != nil && !IsNil(o.LetsencryptEmail) {
		return true
	}

	return false
}

// SetLetsencryptEmail gets a reference to the given string and assigns it to the LetsencryptEmail field.
func (o *PostCertificateCreateRequestMeta) SetLetsencryptEmail(v string) {
	o.LetsencryptEmail = &v
}

// GetLetsencryptAgree returns the LetsencryptAgree field value if set, zero value otherwise.
func (o *PostCertificateCreateRequestMeta) GetLetsencryptAgree() boolAsInt {
	if o == nil || IsNil(o.LetsencryptAgree) {
		var ret boolAsInt
		return ret
	}
	return *o.LetsencryptAgree
}

// GetLetsencryptAgreeOk returns a tuple with the LetsencryptAgree field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostCertificateCreateRequestMeta) GetLetsencryptAgreeOk() (*boolAsInt, bool) {
	if o == nil || IsNil(o.LetsencryptAgree) {
		return nil, false
	}
	return o.LetsencryptAgree, true
}

// HasLetsencryptAgree returns a boolean if a field has been set.
func (o *PostCertificateCreateRequestMeta) HasLetsencryptAgree() bool {
	if o != nil && !IsNil(o.LetsencryptAgree) {
		return true
	}

	return false
}

// SetLetsencryptAgree gets a reference to the given boolAsInt and assigns it to the LetsencryptAgree field.
func (o *PostCertificateCreateRequestMeta) SetLetsencryptAgree(v boolAsInt) {
	o.LetsencryptAgree = &v
}

// GetDnsChallenge returns the DnsChallenge field value if set, zero value otherwise.
func (o *PostCertificateCreateRequestMeta) GetDnsChallenge() boolAsInt {
	if o == nil || IsNil(o.DnsChallenge) {
		var ret boolAsInt
		return ret
	}
	return *o.DnsChallenge
}

// GetDnsChallengeOk returns a tuple with the DnsChallenge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostCertificateCreateRequestMeta) GetDnsChallengeOk() (*boolAsInt, bool) {
	if o == nil || IsNil(o.DnsChallenge) {
		return nil, false
	}
	return o.DnsChallenge, true
}

// HasDnsChallenge returns a boolean if a field has been set.
func (o *PostCertificateCreateRequestMeta) HasDnsChallenge() bool {
	if o != nil && !IsNil(o.DnsChallenge) {
		return true
	}

	return false
}

// SetDnsChallenge gets a reference to the given boolAsInt and assigns it to the DnsChallenge field.
func (o *PostCertificateCreateRequestMeta) SetDnsChallenge(v boolAsInt) {
	o.DnsChallenge = &v
}

// GetDnsProvider returns the DnsProvider field value if set, zero value otherwise.
func (o *PostCertificateCreateRequestMeta) GetDnsProvider() string {
	if o == nil || IsNil(o.DnsProvider) {
		var ret string
		return ret
	}
	return *o.DnsProvider
}

// GetDnsProviderOk returns a tuple with the DnsProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostCertificateCreateRequestMeta) GetDnsProviderOk() (*string, bool) {
	if o == nil || IsNil(o.DnsProvider) {
		return nil, false
	}
	return o.DnsProvider, true
}

// HasDnsProvider returns a boolean if a field has been set.
func (o *PostCertificateCreateRequestMeta) HasDnsProvider() bool {
	if o != nil && !IsNil(o.DnsProvider) {
		return true
	}

	return false
}

// SetDnsProvider gets a reference to the given string and assigns it to the DnsProvider field.
func (o *PostCertificateCreateRequestMeta) SetDnsProvider(v string) {
	o.DnsProvider = &v
}

// GetDnsProviderCredentials returns the DnsProviderCredentials field value if set, zero value otherwise.
func (o *PostCertificateCreateRequestMeta) GetDnsProviderCredentials() string {
	if o == nil || IsNil(o.DnsProviderCredentials) {
		var ret string
		return ret
	}
	return *o.DnsProviderCredentials
}

// GetDnsProviderCredentialsOk returns a tuple with the DnsProviderCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostCertificateCreateRequestMeta) GetDnsProviderCredentialsOk() (*string, bool) {
	if o == nil || IsNil(o.DnsProviderCredentials) {
		return nil, false
	}
	return o.DnsProviderCredentials, true
}

// HasDnsProviderCredentials returns a boolean if a field has been set.
func (o *PostCertificateCreateRequestMeta) HasDnsProviderCredentials() bool {
	if o != nil && !IsNil(o.DnsProviderCredentials) {
		return true
	}

	return false
}

// SetDnsProviderCredentials gets a reference to the given string and assigns it to the DnsProviderCredentials field.
func (o *PostCertificateCreateRequestMeta) SetDnsProviderCredentials(v string) {
	o.DnsProviderCredentials = &v
}

// GetPropagationSeconds returns the PropagationSeconds field value if set, zero value otherwise.
func (o *PostCertificateCreateRequestMeta) GetPropagationSeconds() int64 {
	if o == nil || IsNil(o.PropagationSeconds) {
		var ret int64
		return ret
	}
	return *o.PropagationSeconds
}

// GetPropagationSecondsOk returns a tuple with the PropagationSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostCertificateCreateRequestMeta) GetPropagationSecondsOk() (*int64, bool) {
	if o == nil || IsNil(o.PropagationSeconds) {
		return nil, false
	}
	return o.PropagationSeconds, true
}

// HasPropagationSeconds returns a boolean if a field has been set.
func (o *PostCertificateCreateRequestMeta) HasPropagationSeconds() bool {
	if o != nil && !IsNil(o.PropagationSeconds) {
		return true
	}

	return false
}

// SetPropagationSeconds gets a reference to the given int64 and assigns it to the PropagationSeconds field.
func (o *PostCertificateCreateRequestMeta) SetPropagationSeconds(v int64) {
	o.PropagationSeconds = &v
}

func (o PostCertificateCreateRequestMeta) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostCertificateCreateRequestMeta) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LetsencryptEmail) {
		toSerialize["letsencrypt_email"] = o.LetsencryptEmail
	}
	if !IsNil(o.LetsencryptAgree) {
		toSerialize["letsencrypt_agree"] = o.LetsencryptAgree
	}
	if !IsNil(o.DnsChallenge) {
		toSerialize["dns_challenge"] = o.DnsChallenge
	}
	if !IsNil(o.DnsProvider) {
		toSerialize["dns_provider"] = o.DnsProvider
	}
	if !IsNil(o.DnsProviderCredentials) {
		toSerialize["dns_provider_credentials"] = o.DnsProviderCredentials
	}
	if !IsNil(o.PropagationSeconds) {
		toSerialize["propagation_seconds"] = o.PropagationSeconds
	}
	return toSerialize, nil
}

type NullablePostCertificateCreateRequestMeta struct {
	value *PostCertificateCreateRequestMeta
	isSet bool
}

func (v NullablePostCertificateCreateRequestMeta) Get() *PostCertificateCreateRequestMeta {
	return v.value
}

func (v *NullablePostCertificateCreateRequestMeta) Set(val *PostCertificateCreateRequestMeta) {
	v.value = val
	v.isSet = true
}

func (v NullablePostCertificateCreateRequestMeta) IsSet() bool {
	return v.isSet
}

func (v *NullablePostCertificateCreateRequestMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostCertificateCreateRequestMeta(val *PostCertificateCreateRequestMeta) *NullablePostCertificateCreateRequestMeta {
	return &NullablePostCertificateCreateRequestMeta{value: val, isSet: true}
}

func (v NullablePostCertificateCreateRequestMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostCertificateCreateRequestMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


