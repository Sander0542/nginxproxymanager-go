/*
Nginx Proxy Manager API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.12.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nginxproxymanager

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateAccessListRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAccessListRequest{}

// CreateAccessListRequest struct for CreateAccessListRequest
type CreateAccessListRequest struct {
	Name string `json:"name"`
	SatisfyAny *bool `json:"satisfy_any,omitempty"`
	PassAuth *bool `json:"pass_auth,omitempty"`
	Items []CreateAccessListRequestItemsInner `json:"items,omitempty"`
	Clients []CreateAccessListRequestClientsInner `json:"clients,omitempty"`
	Meta map[string]interface{} `json:"meta,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateAccessListRequest CreateAccessListRequest

// NewCreateAccessListRequest instantiates a new CreateAccessListRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAccessListRequest(name string) *CreateAccessListRequest {
	this := CreateAccessListRequest{}
	this.Name = name
	return &this
}

// NewCreateAccessListRequestWithDefaults instantiates a new CreateAccessListRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAccessListRequestWithDefaults() *CreateAccessListRequest {
	this := CreateAccessListRequest{}
	return &this
}

// GetName returns the Name field value
func (o *CreateAccessListRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateAccessListRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateAccessListRequest) SetName(v string) {
	o.Name = v
}

// GetSatisfyAny returns the SatisfyAny field value if set, zero value otherwise.
func (o *CreateAccessListRequest) GetSatisfyAny() bool {
	if o == nil || IsNil(o.SatisfyAny) {
		var ret bool
		return ret
	}
	return *o.SatisfyAny
}

// GetSatisfyAnyOk returns a tuple with the SatisfyAny field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAccessListRequest) GetSatisfyAnyOk() (*bool, bool) {
	if o == nil || IsNil(o.SatisfyAny) {
		return nil, false
	}
	return o.SatisfyAny, true
}

// HasSatisfyAny returns a boolean if a field has been set.
func (o *CreateAccessListRequest) HasSatisfyAny() bool {
	if o != nil && !IsNil(o.SatisfyAny) {
		return true
	}

	return false
}

// SetSatisfyAny gets a reference to the given bool and assigns it to the SatisfyAny field.
func (o *CreateAccessListRequest) SetSatisfyAny(v bool) {
	o.SatisfyAny = &v
}

// GetPassAuth returns the PassAuth field value if set, zero value otherwise.
func (o *CreateAccessListRequest) GetPassAuth() bool {
	if o == nil || IsNil(o.PassAuth) {
		var ret bool
		return ret
	}
	return *o.PassAuth
}

// GetPassAuthOk returns a tuple with the PassAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAccessListRequest) GetPassAuthOk() (*bool, bool) {
	if o == nil || IsNil(o.PassAuth) {
		return nil, false
	}
	return o.PassAuth, true
}

// HasPassAuth returns a boolean if a field has been set.
func (o *CreateAccessListRequest) HasPassAuth() bool {
	if o != nil && !IsNil(o.PassAuth) {
		return true
	}

	return false
}

// SetPassAuth gets a reference to the given bool and assigns it to the PassAuth field.
func (o *CreateAccessListRequest) SetPassAuth(v bool) {
	o.PassAuth = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *CreateAccessListRequest) GetItems() []CreateAccessListRequestItemsInner {
	if o == nil || IsNil(o.Items) {
		var ret []CreateAccessListRequestItemsInner
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAccessListRequest) GetItemsOk() ([]CreateAccessListRequestItemsInner, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *CreateAccessListRequest) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []CreateAccessListRequestItemsInner and assigns it to the Items field.
func (o *CreateAccessListRequest) SetItems(v []CreateAccessListRequestItemsInner) {
	o.Items = v
}

// GetClients returns the Clients field value if set, zero value otherwise.
func (o *CreateAccessListRequest) GetClients() []CreateAccessListRequestClientsInner {
	if o == nil || IsNil(o.Clients) {
		var ret []CreateAccessListRequestClientsInner
		return ret
	}
	return o.Clients
}

// GetClientsOk returns a tuple with the Clients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAccessListRequest) GetClientsOk() ([]CreateAccessListRequestClientsInner, bool) {
	if o == nil || IsNil(o.Clients) {
		return nil, false
	}
	return o.Clients, true
}

// HasClients returns a boolean if a field has been set.
func (o *CreateAccessListRequest) HasClients() bool {
	if o != nil && !IsNil(o.Clients) {
		return true
	}

	return false
}

// SetClients gets a reference to the given []CreateAccessListRequestClientsInner and assigns it to the Clients field.
func (o *CreateAccessListRequest) SetClients(v []CreateAccessListRequestClientsInner) {
	o.Clients = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *CreateAccessListRequest) GetMeta() map[string]interface{} {
	if o == nil || IsNil(o.Meta) {
		var ret map[string]interface{}
		return ret
	}
	return o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAccessListRequest) GetMetaOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Meta) {
		return map[string]interface{}{}, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *CreateAccessListRequest) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given map[string]interface{} and assigns it to the Meta field.
func (o *CreateAccessListRequest) SetMeta(v map[string]interface{}) {
	o.Meta = v
}

func (o CreateAccessListRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAccessListRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.SatisfyAny) {
		toSerialize["satisfy_any"] = o.SatisfyAny
	}
	if !IsNil(o.PassAuth) {
		toSerialize["pass_auth"] = o.PassAuth
	}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !IsNil(o.Clients) {
		toSerialize["clients"] = o.Clients
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateAccessListRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateAccessListRequest := _CreateAccessListRequest{}

	err = json.Unmarshal(data, &varCreateAccessListRequest)

	if err != nil {
		return err
	}

	*o = CreateAccessListRequest(varCreateAccessListRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "satisfy_any")
		delete(additionalProperties, "pass_auth")
		delete(additionalProperties, "items")
		delete(additionalProperties, "clients")
		delete(additionalProperties, "meta")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateAccessListRequest struct {
	value *CreateAccessListRequest
	isSet bool
}

func (v NullableCreateAccessListRequest) Get() *CreateAccessListRequest {
	return v.value
}

func (v *NullableCreateAccessListRequest) Set(val *CreateAccessListRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAccessListRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAccessListRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAccessListRequest(val *CreateAccessListRequest) *NullableCreateAccessListRequest {
	return &NullableCreateAccessListRequest{value: val, isSet: true}
}

func (v NullableCreateAccessListRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAccessListRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


