/*
Nginx Proxy Manager API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.12.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nginxproxymanager

import (
	"encoding/json"
)

// checks if the UpdateSettingRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateSettingRequest{}

// UpdateSettingRequest struct for UpdateSettingRequest
type UpdateSettingRequest struct {
	Value *string `json:"value,omitempty"`
	Meta *UpdateSettingRequestMeta `json:"meta,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateSettingRequest UpdateSettingRequest

// NewUpdateSettingRequest instantiates a new UpdateSettingRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateSettingRequest() *UpdateSettingRequest {
	this := UpdateSettingRequest{}
	return &this
}

// NewUpdateSettingRequestWithDefaults instantiates a new UpdateSettingRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateSettingRequestWithDefaults() *UpdateSettingRequest {
	this := UpdateSettingRequest{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *UpdateSettingRequest) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSettingRequest) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *UpdateSettingRequest) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *UpdateSettingRequest) SetValue(v string) {
	o.Value = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *UpdateSettingRequest) GetMeta() UpdateSettingRequestMeta {
	if o == nil || IsNil(o.Meta) {
		var ret UpdateSettingRequestMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSettingRequest) GetMetaOk() (*UpdateSettingRequestMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *UpdateSettingRequest) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given UpdateSettingRequestMeta and assigns it to the Meta field.
func (o *UpdateSettingRequest) SetMeta(v UpdateSettingRequestMeta) {
	o.Meta = &v
}

func (o UpdateSettingRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateSettingRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateSettingRequest) UnmarshalJSON(data []byte) (err error) {
	varUpdateSettingRequest := _UpdateSettingRequest{}

	err = json.Unmarshal(data, &varUpdateSettingRequest)

	if err != nil {
		return err
	}

	*o = UpdateSettingRequest(varUpdateSettingRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "value")
		delete(additionalProperties, "meta")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateSettingRequest struct {
	value *UpdateSettingRequest
	isSet bool
}

func (v NullableUpdateSettingRequest) Get() *UpdateSettingRequest {
	return v.value
}

func (v *NullableUpdateSettingRequest) Set(val *UpdateSettingRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateSettingRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateSettingRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateSettingRequest(val *UpdateSettingRequest) *NullableUpdateSettingRequest {
	return &NullableUpdateSettingRequest{value: val, isSet: true}
}

func (v NullableUpdateSettingRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateSettingRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


