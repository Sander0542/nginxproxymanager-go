/*
Nginx Proxy Manager API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.x.x
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nginxproxymanager

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PostTokenCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostTokenCreateRequest{}

// PostTokenCreateRequest struct for PostTokenCreateRequest
type PostTokenCreateRequest struct {
	// Email Address or other 3rd party providers identifier
	Identity string `json:"identity"`
	// A password or key
	Secret string `json:"secret"`
	// Scope of the Token, defaults to 'user'
	Scope *string `json:"scope,omitempty"`
}

type _PostTokenCreateRequest PostTokenCreateRequest

// NewPostTokenCreateRequest instantiates a new PostTokenCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostTokenCreateRequest(identity string, secret string) *PostTokenCreateRequest {
	this := PostTokenCreateRequest{}
	this.Identity = identity
	this.Secret = secret
	return &this
}

// NewPostTokenCreateRequestWithDefaults instantiates a new PostTokenCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostTokenCreateRequestWithDefaults() *PostTokenCreateRequest {
	this := PostTokenCreateRequest{}
	return &this
}

// GetIdentity returns the Identity field value
func (o *PostTokenCreateRequest) GetIdentity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Identity
}

// GetIdentityOk returns a tuple with the Identity field value
// and a boolean to check if the value has been set.
func (o *PostTokenCreateRequest) GetIdentityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Identity, true
}

// SetIdentity sets field value
func (o *PostTokenCreateRequest) SetIdentity(v string) {
	o.Identity = v
}

// GetSecret returns the Secret field value
func (o *PostTokenCreateRequest) GetSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Secret
}

// GetSecretOk returns a tuple with the Secret field value
// and a boolean to check if the value has been set.
func (o *PostTokenCreateRequest) GetSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Secret, true
}

// SetSecret sets field value
func (o *PostTokenCreateRequest) SetSecret(v string) {
	o.Secret = v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *PostTokenCreateRequest) GetScope() string {
	if o == nil || IsNil(o.Scope) {
		var ret string
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTokenCreateRequest) GetScopeOk() (*string, bool) {
	if o == nil || IsNil(o.Scope) {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *PostTokenCreateRequest) HasScope() bool {
	if o != nil && !IsNil(o.Scope) {
		return true
	}

	return false
}

// SetScope gets a reference to the given string and assigns it to the Scope field.
func (o *PostTokenCreateRequest) SetScope(v string) {
	o.Scope = &v
}

func (o PostTokenCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostTokenCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["identity"] = o.Identity
	toSerialize["secret"] = o.Secret
	if !IsNil(o.Scope) {
		toSerialize["scope"] = o.Scope
	}
	return toSerialize, nil
}

func (o *PostTokenCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"identity",
		"secret",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostTokenCreateRequest := _PostTokenCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostTokenCreateRequest)

	if err != nil {
		return err
	}

	*o = PostTokenCreateRequest(varPostTokenCreateRequest)

	return err
}

type NullablePostTokenCreateRequest struct {
	value *PostTokenCreateRequest
	isSet bool
}

func (v NullablePostTokenCreateRequest) Get() *PostTokenCreateRequest {
	return v.value
}

func (v *NullablePostTokenCreateRequest) Set(val *PostTokenCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostTokenCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostTokenCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostTokenCreateRequest(val *PostTokenCreateRequest) *NullablePostTokenCreateRequest {
	return &NullablePostTokenCreateRequest{value: val, isSet: true}
}

func (v NullablePostTokenCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostTokenCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


