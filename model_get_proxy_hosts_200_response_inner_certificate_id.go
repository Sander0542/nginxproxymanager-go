/*
Nginx Proxy Manager API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.12.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nginxproxymanager

import (
	"encoding/json"
	"fmt"
)


// GetProxyHosts200ResponseInnerCertificateId Certificate ID
type GetProxyHosts200ResponseInnerCertificateId struct {
	Int64 *int64
	String *string
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *GetProxyHosts200ResponseInnerCertificateId) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into Int64
	err = json.Unmarshal(data, &dst.Int64);
	if err == nil {
		jsonInt64, _ := json.Marshal(dst.Int64)
		if string(jsonInt64) == "{}" { // empty struct
			dst.Int64 = nil
		} else {
			return nil // data stored in dst.Int64, return on the first match
		}
	} else {
		dst.Int64 = nil
	}

	// try to unmarshal JSON data into String
	err = json.Unmarshal(data, &dst.String);
	if err == nil {
		jsonString, _ := json.Marshal(dst.String)
		if string(jsonString) == "{}" { // empty struct
			dst.String = nil
		} else {
			return nil // data stored in dst.String, return on the first match
		}
	} else {
		dst.String = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(GetProxyHosts200ResponseInnerCertificateId)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetProxyHosts200ResponseInnerCertificateId) MarshalJSON() ([]byte, error) {
	if src.Int64 != nil {
		return json.Marshal(&src.Int64)
	}

	if src.String != nil {
		return json.Marshal(&src.String)
	}

	return nil, nil // no data in anyOf schemas
}


type NullableGetProxyHosts200ResponseInnerCertificateId struct {
	value *GetProxyHosts200ResponseInnerCertificateId
	isSet bool
}

func (v NullableGetProxyHosts200ResponseInnerCertificateId) Get() *GetProxyHosts200ResponseInnerCertificateId {
	return v.value
}

func (v *NullableGetProxyHosts200ResponseInnerCertificateId) Set(val *GetProxyHosts200ResponseInnerCertificateId) {
	v.value = val
	v.isSet = true
}

func (v NullableGetProxyHosts200ResponseInnerCertificateId) IsSet() bool {
	return v.isSet
}

func (v *NullableGetProxyHosts200ResponseInnerCertificateId) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetProxyHosts200ResponseInnerCertificateId(val *GetProxyHosts200ResponseInnerCertificateId) *NullableGetProxyHosts200ResponseInnerCertificateId {
	return &NullableGetProxyHosts200ResponseInnerCertificateId{value: val, isSet: true}
}

func (v NullableGetProxyHosts200ResponseInnerCertificateId) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetProxyHosts200ResponseInnerCertificateId) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


