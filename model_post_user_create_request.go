/*
Nginx Proxy Manager API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.x.x
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nginxproxymanager

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PostUserCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostUserCreateRequest{}

// PostUserCreateRequest struct for PostUserCreateRequest
type PostUserCreateRequest struct {
	// Name
	Name string `json:"name"`
	// Nickname
	Nickname string `json:"nickname"`
	// Email Address
	Email string `json:"email"`
	// Roles
	Roles []interface{} `json:"roles,omitempty"`
	// Is Disabled
	IsDisabled *boolAsInt `json:"is_disabled,omitempty"`
	// Auth Credentials
	Auth map[string]interface{} `json:"auth,omitempty"`
}

type _PostUserCreateRequest PostUserCreateRequest

// NewPostUserCreateRequest instantiates a new PostUserCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostUserCreateRequest(name string, nickname string, email string) *PostUserCreateRequest {
	this := PostUserCreateRequest{}
	this.Name = name
	this.Nickname = nickname
	this.Email = email
	return &this
}

// NewPostUserCreateRequestWithDefaults instantiates a new PostUserCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostUserCreateRequestWithDefaults() *PostUserCreateRequest {
	this := PostUserCreateRequest{}
	return &this
}

// GetName returns the Name field value
func (o *PostUserCreateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PostUserCreateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PostUserCreateRequest) SetName(v string) {
	o.Name = v
}

// GetNickname returns the Nickname field value
func (o *PostUserCreateRequest) GetNickname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Nickname
}

// GetNicknameOk returns a tuple with the Nickname field value
// and a boolean to check if the value has been set.
func (o *PostUserCreateRequest) GetNicknameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Nickname, true
}

// SetNickname sets field value
func (o *PostUserCreateRequest) SetNickname(v string) {
	o.Nickname = v
}

// GetEmail returns the Email field value
func (o *PostUserCreateRequest) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *PostUserCreateRequest) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *PostUserCreateRequest) SetEmail(v string) {
	o.Email = v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *PostUserCreateRequest) GetRoles() []interface{} {
	if o == nil || IsNil(o.Roles) {
		var ret []interface{}
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostUserCreateRequest) GetRolesOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *PostUserCreateRequest) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []interface{} and assigns it to the Roles field.
func (o *PostUserCreateRequest) SetRoles(v []interface{}) {
	o.Roles = v
}

// GetIsDisabled returns the IsDisabled field value if set, zero value otherwise.
func (o *PostUserCreateRequest) GetIsDisabled() boolAsInt {
	if o == nil || IsNil(o.IsDisabled) {
		var ret boolAsInt
		return ret
	}
	return *o.IsDisabled
}

// GetIsDisabledOk returns a tuple with the IsDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostUserCreateRequest) GetIsDisabledOk() (*boolAsInt, bool) {
	if o == nil || IsNil(o.IsDisabled) {
		return nil, false
	}
	return o.IsDisabled, true
}

// HasIsDisabled returns a boolean if a field has been set.
func (o *PostUserCreateRequest) HasIsDisabled() bool {
	if o != nil && !IsNil(o.IsDisabled) {
		return true
	}

	return false
}

// SetIsDisabled gets a reference to the given boolAsInt and assigns it to the IsDisabled field.
func (o *PostUserCreateRequest) SetIsDisabled(v boolAsInt) {
	o.IsDisabled = &v
}

// GetAuth returns the Auth field value if set, zero value otherwise.
func (o *PostUserCreateRequest) GetAuth() map[string]interface{} {
	if o == nil || IsNil(o.Auth) {
		var ret map[string]interface{}
		return ret
	}
	return o.Auth
}

// GetAuthOk returns a tuple with the Auth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostUserCreateRequest) GetAuthOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Auth) {
		return map[string]interface{}{}, false
	}
	return o.Auth, true
}

// HasAuth returns a boolean if a field has been set.
func (o *PostUserCreateRequest) HasAuth() bool {
	if o != nil && !IsNil(o.Auth) {
		return true
	}

	return false
}

// SetAuth gets a reference to the given map[string]interface{} and assigns it to the Auth field.
func (o *PostUserCreateRequest) SetAuth(v map[string]interface{}) {
	o.Auth = v
}

func (o PostUserCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostUserCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["nickname"] = o.Nickname
	toSerialize["email"] = o.Email
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	if !IsNil(o.IsDisabled) {
		toSerialize["is_disabled"] = o.IsDisabled
	}
	if !IsNil(o.Auth) {
		toSerialize["auth"] = o.Auth
	}
	return toSerialize, nil
}

func (o *PostUserCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"nickname",
		"email",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostUserCreateRequest := _PostUserCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostUserCreateRequest)

	if err != nil {
		return err
	}

	*o = PostUserCreateRequest(varPostUserCreateRequest)

	return err
}

type NullablePostUserCreateRequest struct {
	value *PostUserCreateRequest
	isSet bool
}

func (v NullablePostUserCreateRequest) Get() *PostUserCreateRequest {
	return v.value
}

func (v *NullablePostUserCreateRequest) Set(val *PostUserCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostUserCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostUserCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostUserCreateRequest(val *PostUserCreateRequest) *NullablePostUserCreateRequest {
	return &NullablePostUserCreateRequest{value: val, isSet: true}
}

func (v NullablePostUserCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostUserCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


