/*
Nginx Proxy Manager API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.x.x
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nginxproxymanager

import (
	"encoding/json"
)

// checks if the PutUserUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PutUserUpdateRequest{}

// PutUserUpdateRequest struct for PutUserUpdateRequest
type PutUserUpdateRequest struct {
	// Name
	Name *string `json:"name,omitempty"`
	// Nickname
	Nickname *string `json:"nickname,omitempty"`
	// Email Address
	Email *string `json:"email,omitempty"`
	// Roles
	Roles []interface{} `json:"roles,omitempty"`
	// Is Disabled
	IsDisabled *boolAsInt `json:"is_disabled,omitempty"`
}

// NewPutUserUpdateRequest instantiates a new PutUserUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutUserUpdateRequest() *PutUserUpdateRequest {
	this := PutUserUpdateRequest{}
	return &this
}

// NewPutUserUpdateRequestWithDefaults instantiates a new PutUserUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutUserUpdateRequestWithDefaults() *PutUserUpdateRequest {
	this := PutUserUpdateRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PutUserUpdateRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutUserUpdateRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PutUserUpdateRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PutUserUpdateRequest) SetName(v string) {
	o.Name = &v
}

// GetNickname returns the Nickname field value if set, zero value otherwise.
func (o *PutUserUpdateRequest) GetNickname() string {
	if o == nil || IsNil(o.Nickname) {
		var ret string
		return ret
	}
	return *o.Nickname
}

// GetNicknameOk returns a tuple with the Nickname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutUserUpdateRequest) GetNicknameOk() (*string, bool) {
	if o == nil || IsNil(o.Nickname) {
		return nil, false
	}
	return o.Nickname, true
}

// HasNickname returns a boolean if a field has been set.
func (o *PutUserUpdateRequest) HasNickname() bool {
	if o != nil && !IsNil(o.Nickname) {
		return true
	}

	return false
}

// SetNickname gets a reference to the given string and assigns it to the Nickname field.
func (o *PutUserUpdateRequest) SetNickname(v string) {
	o.Nickname = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *PutUserUpdateRequest) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutUserUpdateRequest) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *PutUserUpdateRequest) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *PutUserUpdateRequest) SetEmail(v string) {
	o.Email = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *PutUserUpdateRequest) GetRoles() []interface{} {
	if o == nil || IsNil(o.Roles) {
		var ret []interface{}
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutUserUpdateRequest) GetRolesOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *PutUserUpdateRequest) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []interface{} and assigns it to the Roles field.
func (o *PutUserUpdateRequest) SetRoles(v []interface{}) {
	o.Roles = v
}

// GetIsDisabled returns the IsDisabled field value if set, zero value otherwise.
func (o *PutUserUpdateRequest) GetIsDisabled() boolAsInt {
	if o == nil || IsNil(o.IsDisabled) {
		var ret boolAsInt
		return ret
	}
	return *o.IsDisabled
}

// GetIsDisabledOk returns a tuple with the IsDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutUserUpdateRequest) GetIsDisabledOk() (*boolAsInt, bool) {
	if o == nil || IsNil(o.IsDisabled) {
		return nil, false
	}
	return o.IsDisabled, true
}

// HasIsDisabled returns a boolean if a field has been set.
func (o *PutUserUpdateRequest) HasIsDisabled() bool {
	if o != nil && !IsNil(o.IsDisabled) {
		return true
	}

	return false
}

// SetIsDisabled gets a reference to the given boolAsInt and assigns it to the IsDisabled field.
func (o *PutUserUpdateRequest) SetIsDisabled(v boolAsInt) {
	o.IsDisabled = &v
}

func (o PutUserUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PutUserUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Nickname) {
		toSerialize["nickname"] = o.Nickname
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	if !IsNil(o.IsDisabled) {
		toSerialize["is_disabled"] = o.IsDisabled
	}
	return toSerialize, nil
}

type NullablePutUserUpdateRequest struct {
	value *PutUserUpdateRequest
	isSet bool
}

func (v NullablePutUserUpdateRequest) Get() *PutUserUpdateRequest {
	return v.value
}

func (v *NullablePutUserUpdateRequest) Set(val *PutUserUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePutUserUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePutUserUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutUserUpdateRequest(val *PutUserUpdateRequest) *NullablePutUserUpdateRequest {
	return &NullablePutUserUpdateRequest{value: val, isSet: true}
}

func (v NullablePutUserUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutUserUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


