/*
Nginx Proxy Manager API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.x.x
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nginxproxymanager

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PostStreamCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostStreamCreateRequest{}

// PostStreamCreateRequest struct for PostStreamCreateRequest
type PostStreamCreateRequest struct {
	IncomingPort int64 `json:"incoming_port"`
	ForwardingHost PutStreamUpdateRequestForwardingHost `json:"forwarding_host"`
	ForwardingPort int64 `json:"forwarding_port"`
	TcpForwarding *boolAsInt `json:"tcp_forwarding,omitempty"`
	UdpForwarding *boolAsInt `json:"udp_forwarding,omitempty"`
	Meta map[string]interface{} `json:"meta,omitempty"`
}

type _PostStreamCreateRequest PostStreamCreateRequest

// NewPostStreamCreateRequest instantiates a new PostStreamCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostStreamCreateRequest(incomingPort int64, forwardingHost PutStreamUpdateRequestForwardingHost, forwardingPort int64) *PostStreamCreateRequest {
	this := PostStreamCreateRequest{}
	this.IncomingPort = incomingPort
	this.ForwardingHost = forwardingHost
	this.ForwardingPort = forwardingPort
	return &this
}

// NewPostStreamCreateRequestWithDefaults instantiates a new PostStreamCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostStreamCreateRequestWithDefaults() *PostStreamCreateRequest {
	this := PostStreamCreateRequest{}
	return &this
}

// GetIncomingPort returns the IncomingPort field value
func (o *PostStreamCreateRequest) GetIncomingPort() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.IncomingPort
}

// GetIncomingPortOk returns a tuple with the IncomingPort field value
// and a boolean to check if the value has been set.
func (o *PostStreamCreateRequest) GetIncomingPortOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IncomingPort, true
}

// SetIncomingPort sets field value
func (o *PostStreamCreateRequest) SetIncomingPort(v int64) {
	o.IncomingPort = v
}

// GetForwardingHost returns the ForwardingHost field value
func (o *PostStreamCreateRequest) GetForwardingHost() PutStreamUpdateRequestForwardingHost {
	if o == nil {
		var ret PutStreamUpdateRequestForwardingHost
		return ret
	}

	return o.ForwardingHost
}

// GetForwardingHostOk returns a tuple with the ForwardingHost field value
// and a boolean to check if the value has been set.
func (o *PostStreamCreateRequest) GetForwardingHostOk() (*PutStreamUpdateRequestForwardingHost, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ForwardingHost, true
}

// SetForwardingHost sets field value
func (o *PostStreamCreateRequest) SetForwardingHost(v PutStreamUpdateRequestForwardingHost) {
	o.ForwardingHost = v
}

// GetForwardingPort returns the ForwardingPort field value
func (o *PostStreamCreateRequest) GetForwardingPort() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ForwardingPort
}

// GetForwardingPortOk returns a tuple with the ForwardingPort field value
// and a boolean to check if the value has been set.
func (o *PostStreamCreateRequest) GetForwardingPortOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ForwardingPort, true
}

// SetForwardingPort sets field value
func (o *PostStreamCreateRequest) SetForwardingPort(v int64) {
	o.ForwardingPort = v
}

// GetTcpForwarding returns the TcpForwarding field value if set, zero value otherwise.
func (o *PostStreamCreateRequest) GetTcpForwarding() boolAsInt {
	if o == nil || IsNil(o.TcpForwarding) {
		var ret boolAsInt
		return ret
	}
	return *o.TcpForwarding
}

// GetTcpForwardingOk returns a tuple with the TcpForwarding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostStreamCreateRequest) GetTcpForwardingOk() (*boolAsInt, bool) {
	if o == nil || IsNil(o.TcpForwarding) {
		return nil, false
	}
	return o.TcpForwarding, true
}

// HasTcpForwarding returns a boolean if a field has been set.
func (o *PostStreamCreateRequest) HasTcpForwarding() bool {
	if o != nil && !IsNil(o.TcpForwarding) {
		return true
	}

	return false
}

// SetTcpForwarding gets a reference to the given boolAsInt and assigns it to the TcpForwarding field.
func (o *PostStreamCreateRequest) SetTcpForwarding(v boolAsInt) {
	o.TcpForwarding = &v
}

// GetUdpForwarding returns the UdpForwarding field value if set, zero value otherwise.
func (o *PostStreamCreateRequest) GetUdpForwarding() boolAsInt {
	if o == nil || IsNil(o.UdpForwarding) {
		var ret boolAsInt
		return ret
	}
	return *o.UdpForwarding
}

// GetUdpForwardingOk returns a tuple with the UdpForwarding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostStreamCreateRequest) GetUdpForwardingOk() (*boolAsInt, bool) {
	if o == nil || IsNil(o.UdpForwarding) {
		return nil, false
	}
	return o.UdpForwarding, true
}

// HasUdpForwarding returns a boolean if a field has been set.
func (o *PostStreamCreateRequest) HasUdpForwarding() bool {
	if o != nil && !IsNil(o.UdpForwarding) {
		return true
	}

	return false
}

// SetUdpForwarding gets a reference to the given boolAsInt and assigns it to the UdpForwarding field.
func (o *PostStreamCreateRequest) SetUdpForwarding(v boolAsInt) {
	o.UdpForwarding = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *PostStreamCreateRequest) GetMeta() map[string]interface{} {
	if o == nil || IsNil(o.Meta) {
		var ret map[string]interface{}
		return ret
	}
	return o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostStreamCreateRequest) GetMetaOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Meta) {
		return map[string]interface{}{}, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *PostStreamCreateRequest) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given map[string]interface{} and assigns it to the Meta field.
func (o *PostStreamCreateRequest) SetMeta(v map[string]interface{}) {
	o.Meta = v
}

func (o PostStreamCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostStreamCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["incoming_port"] = o.IncomingPort
	toSerialize["forwarding_host"] = o.ForwardingHost
	toSerialize["forwarding_port"] = o.ForwardingPort
	if !IsNil(o.TcpForwarding) {
		toSerialize["tcp_forwarding"] = o.TcpForwarding
	}
	if !IsNil(o.UdpForwarding) {
		toSerialize["udp_forwarding"] = o.UdpForwarding
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

func (o *PostStreamCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"incoming_port",
		"forwarding_host",
		"forwarding_port",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostStreamCreateRequest := _PostStreamCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostStreamCreateRequest)

	if err != nil {
		return err
	}

	*o = PostStreamCreateRequest(varPostStreamCreateRequest)

	return err
}

type NullablePostStreamCreateRequest struct {
	value *PostStreamCreateRequest
	isSet bool
}

func (v NullablePostStreamCreateRequest) Get() *PostStreamCreateRequest {
	return v.value
}

func (v *NullablePostStreamCreateRequest) Set(val *PostStreamCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostStreamCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostStreamCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostStreamCreateRequest(val *PostStreamCreateRequest) *NullablePostStreamCreateRequest {
	return &NullablePostStreamCreateRequest{value: val, isSet: true}
}

func (v NullablePostStreamCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostStreamCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


