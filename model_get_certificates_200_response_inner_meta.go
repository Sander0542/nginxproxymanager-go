/*
Nginx Proxy Manager API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.12.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nginxproxymanager

import (
	"encoding/json"
)

// checks if the GetCertificates200ResponseInnerMeta type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetCertificates200ResponseInnerMeta{}

// GetCertificates200ResponseInnerMeta struct for GetCertificates200ResponseInnerMeta
type GetCertificates200ResponseInnerMeta struct {
	Certificate *string `json:"certificate,omitempty"`
	CertificateKey *string `json:"certificate_key,omitempty"`
	DnsChallenge *bool `json:"dns_challenge,omitempty"`
	DnsProvider *string `json:"dns_provider,omitempty"`
	DnsProviderCredentials *string `json:"dns_provider_credentials,omitempty"`
	LetsencryptAgree *bool `json:"letsencrypt_agree,omitempty"`
	LetsencryptCertificate map[string]interface{} `json:"letsencrypt_certificate,omitempty"`
	LetsencryptEmail *string `json:"letsencrypt_email,omitempty"`
	PropagationSeconds *int64 `json:"propagation_seconds,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetCertificates200ResponseInnerMeta GetCertificates200ResponseInnerMeta

// NewGetCertificates200ResponseInnerMeta instantiates a new GetCertificates200ResponseInnerMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetCertificates200ResponseInnerMeta() *GetCertificates200ResponseInnerMeta {
	this := GetCertificates200ResponseInnerMeta{}
	return &this
}

// NewGetCertificates200ResponseInnerMetaWithDefaults instantiates a new GetCertificates200ResponseInnerMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetCertificates200ResponseInnerMetaWithDefaults() *GetCertificates200ResponseInnerMeta {
	this := GetCertificates200ResponseInnerMeta{}
	return &this
}

// GetCertificate returns the Certificate field value if set, zero value otherwise.
func (o *GetCertificates200ResponseInnerMeta) GetCertificate() string {
	if o == nil || IsNil(o.Certificate) {
		var ret string
		return ret
	}
	return *o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCertificates200ResponseInnerMeta) GetCertificateOk() (*string, bool) {
	if o == nil || IsNil(o.Certificate) {
		return nil, false
	}
	return o.Certificate, true
}

// HasCertificate returns a boolean if a field has been set.
func (o *GetCertificates200ResponseInnerMeta) HasCertificate() bool {
	if o != nil && !IsNil(o.Certificate) {
		return true
	}

	return false
}

// SetCertificate gets a reference to the given string and assigns it to the Certificate field.
func (o *GetCertificates200ResponseInnerMeta) SetCertificate(v string) {
	o.Certificate = &v
}

// GetCertificateKey returns the CertificateKey field value if set, zero value otherwise.
func (o *GetCertificates200ResponseInnerMeta) GetCertificateKey() string {
	if o == nil || IsNil(o.CertificateKey) {
		var ret string
		return ret
	}
	return *o.CertificateKey
}

// GetCertificateKeyOk returns a tuple with the CertificateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCertificates200ResponseInnerMeta) GetCertificateKeyOk() (*string, bool) {
	if o == nil || IsNil(o.CertificateKey) {
		return nil, false
	}
	return o.CertificateKey, true
}

// HasCertificateKey returns a boolean if a field has been set.
func (o *GetCertificates200ResponseInnerMeta) HasCertificateKey() bool {
	if o != nil && !IsNil(o.CertificateKey) {
		return true
	}

	return false
}

// SetCertificateKey gets a reference to the given string and assigns it to the CertificateKey field.
func (o *GetCertificates200ResponseInnerMeta) SetCertificateKey(v string) {
	o.CertificateKey = &v
}

// GetDnsChallenge returns the DnsChallenge field value if set, zero value otherwise.
func (o *GetCertificates200ResponseInnerMeta) GetDnsChallenge() bool {
	if o == nil || IsNil(o.DnsChallenge) {
		var ret bool
		return ret
	}
	return *o.DnsChallenge
}

// GetDnsChallengeOk returns a tuple with the DnsChallenge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCertificates200ResponseInnerMeta) GetDnsChallengeOk() (*bool, bool) {
	if o == nil || IsNil(o.DnsChallenge) {
		return nil, false
	}
	return o.DnsChallenge, true
}

// HasDnsChallenge returns a boolean if a field has been set.
func (o *GetCertificates200ResponseInnerMeta) HasDnsChallenge() bool {
	if o != nil && !IsNil(o.DnsChallenge) {
		return true
	}

	return false
}

// SetDnsChallenge gets a reference to the given bool and assigns it to the DnsChallenge field.
func (o *GetCertificates200ResponseInnerMeta) SetDnsChallenge(v bool) {
	o.DnsChallenge = &v
}

// GetDnsProvider returns the DnsProvider field value if set, zero value otherwise.
func (o *GetCertificates200ResponseInnerMeta) GetDnsProvider() string {
	if o == nil || IsNil(o.DnsProvider) {
		var ret string
		return ret
	}
	return *o.DnsProvider
}

// GetDnsProviderOk returns a tuple with the DnsProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCertificates200ResponseInnerMeta) GetDnsProviderOk() (*string, bool) {
	if o == nil || IsNil(o.DnsProvider) {
		return nil, false
	}
	return o.DnsProvider, true
}

// HasDnsProvider returns a boolean if a field has been set.
func (o *GetCertificates200ResponseInnerMeta) HasDnsProvider() bool {
	if o != nil && !IsNil(o.DnsProvider) {
		return true
	}

	return false
}

// SetDnsProvider gets a reference to the given string and assigns it to the DnsProvider field.
func (o *GetCertificates200ResponseInnerMeta) SetDnsProvider(v string) {
	o.DnsProvider = &v
}

// GetDnsProviderCredentials returns the DnsProviderCredentials field value if set, zero value otherwise.
func (o *GetCertificates200ResponseInnerMeta) GetDnsProviderCredentials() string {
	if o == nil || IsNil(o.DnsProviderCredentials) {
		var ret string
		return ret
	}
	return *o.DnsProviderCredentials
}

// GetDnsProviderCredentialsOk returns a tuple with the DnsProviderCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCertificates200ResponseInnerMeta) GetDnsProviderCredentialsOk() (*string, bool) {
	if o == nil || IsNil(o.DnsProviderCredentials) {
		return nil, false
	}
	return o.DnsProviderCredentials, true
}

// HasDnsProviderCredentials returns a boolean if a field has been set.
func (o *GetCertificates200ResponseInnerMeta) HasDnsProviderCredentials() bool {
	if o != nil && !IsNil(o.DnsProviderCredentials) {
		return true
	}

	return false
}

// SetDnsProviderCredentials gets a reference to the given string and assigns it to the DnsProviderCredentials field.
func (o *GetCertificates200ResponseInnerMeta) SetDnsProviderCredentials(v string) {
	o.DnsProviderCredentials = &v
}

// GetLetsencryptAgree returns the LetsencryptAgree field value if set, zero value otherwise.
func (o *GetCertificates200ResponseInnerMeta) GetLetsencryptAgree() bool {
	if o == nil || IsNil(o.LetsencryptAgree) {
		var ret bool
		return ret
	}
	return *o.LetsencryptAgree
}

// GetLetsencryptAgreeOk returns a tuple with the LetsencryptAgree field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCertificates200ResponseInnerMeta) GetLetsencryptAgreeOk() (*bool, bool) {
	if o == nil || IsNil(o.LetsencryptAgree) {
		return nil, false
	}
	return o.LetsencryptAgree, true
}

// HasLetsencryptAgree returns a boolean if a field has been set.
func (o *GetCertificates200ResponseInnerMeta) HasLetsencryptAgree() bool {
	if o != nil && !IsNil(o.LetsencryptAgree) {
		return true
	}

	return false
}

// SetLetsencryptAgree gets a reference to the given bool and assigns it to the LetsencryptAgree field.
func (o *GetCertificates200ResponseInnerMeta) SetLetsencryptAgree(v bool) {
	o.LetsencryptAgree = &v
}

// GetLetsencryptCertificate returns the LetsencryptCertificate field value if set, zero value otherwise.
func (o *GetCertificates200ResponseInnerMeta) GetLetsencryptCertificate() map[string]interface{} {
	if o == nil || IsNil(o.LetsencryptCertificate) {
		var ret map[string]interface{}
		return ret
	}
	return o.LetsencryptCertificate
}

// GetLetsencryptCertificateOk returns a tuple with the LetsencryptCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCertificates200ResponseInnerMeta) GetLetsencryptCertificateOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.LetsencryptCertificate) {
		return map[string]interface{}{}, false
	}
	return o.LetsencryptCertificate, true
}

// HasLetsencryptCertificate returns a boolean if a field has been set.
func (o *GetCertificates200ResponseInnerMeta) HasLetsencryptCertificate() bool {
	if o != nil && !IsNil(o.LetsencryptCertificate) {
		return true
	}

	return false
}

// SetLetsencryptCertificate gets a reference to the given map[string]interface{} and assigns it to the LetsencryptCertificate field.
func (o *GetCertificates200ResponseInnerMeta) SetLetsencryptCertificate(v map[string]interface{}) {
	o.LetsencryptCertificate = v
}

// GetLetsencryptEmail returns the LetsencryptEmail field value if set, zero value otherwise.
func (o *GetCertificates200ResponseInnerMeta) GetLetsencryptEmail() string {
	if o == nil || IsNil(o.LetsencryptEmail) {
		var ret string
		return ret
	}
	return *o.LetsencryptEmail
}

// GetLetsencryptEmailOk returns a tuple with the LetsencryptEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCertificates200ResponseInnerMeta) GetLetsencryptEmailOk() (*string, bool) {
	if o == nil || IsNil(o.LetsencryptEmail) {
		return nil, false
	}
	return o.LetsencryptEmail, true
}

// HasLetsencryptEmail returns a boolean if a field has been set.
func (o *GetCertificates200ResponseInnerMeta) HasLetsencryptEmail() bool {
	if o != nil && !IsNil(o.LetsencryptEmail) {
		return true
	}

	return false
}

// SetLetsencryptEmail gets a reference to the given string and assigns it to the LetsencryptEmail field.
func (o *GetCertificates200ResponseInnerMeta) SetLetsencryptEmail(v string) {
	o.LetsencryptEmail = &v
}

// GetPropagationSeconds returns the PropagationSeconds field value if set, zero value otherwise.
func (o *GetCertificates200ResponseInnerMeta) GetPropagationSeconds() int64 {
	if o == nil || IsNil(o.PropagationSeconds) {
		var ret int64
		return ret
	}
	return *o.PropagationSeconds
}

// GetPropagationSecondsOk returns a tuple with the PropagationSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCertificates200ResponseInnerMeta) GetPropagationSecondsOk() (*int64, bool) {
	if o == nil || IsNil(o.PropagationSeconds) {
		return nil, false
	}
	return o.PropagationSeconds, true
}

// HasPropagationSeconds returns a boolean if a field has been set.
func (o *GetCertificates200ResponseInnerMeta) HasPropagationSeconds() bool {
	if o != nil && !IsNil(o.PropagationSeconds) {
		return true
	}

	return false
}

// SetPropagationSeconds gets a reference to the given int64 and assigns it to the PropagationSeconds field.
func (o *GetCertificates200ResponseInnerMeta) SetPropagationSeconds(v int64) {
	o.PropagationSeconds = &v
}

func (o GetCertificates200ResponseInnerMeta) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetCertificates200ResponseInnerMeta) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Certificate) {
		toSerialize["certificate"] = o.Certificate
	}
	if !IsNil(o.CertificateKey) {
		toSerialize["certificate_key"] = o.CertificateKey
	}
	if !IsNil(o.DnsChallenge) {
		toSerialize["dns_challenge"] = o.DnsChallenge
	}
	if !IsNil(o.DnsProvider) {
		toSerialize["dns_provider"] = o.DnsProvider
	}
	if !IsNil(o.DnsProviderCredentials) {
		toSerialize["dns_provider_credentials"] = o.DnsProviderCredentials
	}
	if !IsNil(o.LetsencryptAgree) {
		toSerialize["letsencrypt_agree"] = o.LetsencryptAgree
	}
	if !IsNil(o.LetsencryptCertificate) {
		toSerialize["letsencrypt_certificate"] = o.LetsencryptCertificate
	}
	if !IsNil(o.LetsencryptEmail) {
		toSerialize["letsencrypt_email"] = o.LetsencryptEmail
	}
	if !IsNil(o.PropagationSeconds) {
		toSerialize["propagation_seconds"] = o.PropagationSeconds
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetCertificates200ResponseInnerMeta) UnmarshalJSON(data []byte) (err error) {
	varGetCertificates200ResponseInnerMeta := _GetCertificates200ResponseInnerMeta{}

	err = json.Unmarshal(data, &varGetCertificates200ResponseInnerMeta)

	if err != nil {
		return err
	}

	*o = GetCertificates200ResponseInnerMeta(varGetCertificates200ResponseInnerMeta)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "certificate")
		delete(additionalProperties, "certificate_key")
		delete(additionalProperties, "dns_challenge")
		delete(additionalProperties, "dns_provider")
		delete(additionalProperties, "dns_provider_credentials")
		delete(additionalProperties, "letsencrypt_agree")
		delete(additionalProperties, "letsencrypt_certificate")
		delete(additionalProperties, "letsencrypt_email")
		delete(additionalProperties, "propagation_seconds")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetCertificates200ResponseInnerMeta struct {
	value *GetCertificates200ResponseInnerMeta
	isSet bool
}

func (v NullableGetCertificates200ResponseInnerMeta) Get() *GetCertificates200ResponseInnerMeta {
	return v.value
}

func (v *NullableGetCertificates200ResponseInnerMeta) Set(val *GetCertificates200ResponseInnerMeta) {
	v.value = val
	v.isSet = true
}

func (v NullableGetCertificates200ResponseInnerMeta) IsSet() bool {
	return v.isSet
}

func (v *NullableGetCertificates200ResponseInnerMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetCertificates200ResponseInnerMeta(val *GetCertificates200ResponseInnerMeta) *NullableGetCertificates200ResponseInnerMeta {
	return &NullableGetCertificates200ResponseInnerMeta{value: val, isSet: true}
}

func (v NullableGetCertificates200ResponseInnerMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetCertificates200ResponseInnerMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


