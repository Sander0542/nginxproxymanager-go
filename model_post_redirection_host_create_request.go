/*
Nginx Proxy Manager API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.x.x
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nginxproxymanager

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PostRedirectionHostCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostRedirectionHostCreateRequest{}

// PostRedirectionHostCreateRequest struct for PostRedirectionHostCreateRequest
type PostRedirectionHostCreateRequest struct {
	// Domain Names separated by a comma
	DomainNames []string `json:"domain_names"`
	// Redirect HTTP Status Code
	ForwardHttpCode int64 `json:"forward_http_code"`
	// RFC Protocol
	ForwardScheme string `json:"forward_scheme"`
	// Domain Name
	ForwardDomainName string `json:"forward_domain_name" validate:"regexp=^(?:[^.*]+\\\\.?)+[^.]$"`
	// Should the path be preserved
	PreservePath *boolAsInt `json:"preserve_path,omitempty"`
	CertificateId *PutProxyHostUpdateRequestCertificateId `json:"certificate_id,omitempty"`
	// Is SSL Forced
	SslForced *boolAsInt `json:"ssl_forced,omitempty"`
	// Is HSTS Enabled
	HstsEnabled *boolAsInt `json:"hsts_enabled,omitempty"`
	// Is HSTS Enabled
	HstsSubdomains *boolAsInt `json:"hsts_subdomains,omitempty"`
	// HTTP2 Protocol Support
	Http2Support *boolAsInt `json:"http2_support,omitempty"`
	// Should we block common exploits
	BlockExploits *boolAsInt `json:"block_exploits,omitempty"`
	AdvancedConfig *string `json:"advanced_config,omitempty"`
	Meta map[string]interface{} `json:"meta,omitempty"`
}

type _PostRedirectionHostCreateRequest PostRedirectionHostCreateRequest

// NewPostRedirectionHostCreateRequest instantiates a new PostRedirectionHostCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostRedirectionHostCreateRequest(domainNames []string, forwardHttpCode int64, forwardScheme string, forwardDomainName string) *PostRedirectionHostCreateRequest {
	this := PostRedirectionHostCreateRequest{}
	this.DomainNames = domainNames
	this.ForwardHttpCode = forwardHttpCode
	this.ForwardScheme = forwardScheme
	this.ForwardDomainName = forwardDomainName
	return &this
}

// NewPostRedirectionHostCreateRequestWithDefaults instantiates a new PostRedirectionHostCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostRedirectionHostCreateRequestWithDefaults() *PostRedirectionHostCreateRequest {
	this := PostRedirectionHostCreateRequest{}
	return &this
}

// GetDomainNames returns the DomainNames field value
func (o *PostRedirectionHostCreateRequest) GetDomainNames() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.DomainNames
}

// GetDomainNamesOk returns a tuple with the DomainNames field value
// and a boolean to check if the value has been set.
func (o *PostRedirectionHostCreateRequest) GetDomainNamesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DomainNames, true
}

// SetDomainNames sets field value
func (o *PostRedirectionHostCreateRequest) SetDomainNames(v []string) {
	o.DomainNames = v
}

// GetForwardHttpCode returns the ForwardHttpCode field value
func (o *PostRedirectionHostCreateRequest) GetForwardHttpCode() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ForwardHttpCode
}

// GetForwardHttpCodeOk returns a tuple with the ForwardHttpCode field value
// and a boolean to check if the value has been set.
func (o *PostRedirectionHostCreateRequest) GetForwardHttpCodeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ForwardHttpCode, true
}

// SetForwardHttpCode sets field value
func (o *PostRedirectionHostCreateRequest) SetForwardHttpCode(v int64) {
	o.ForwardHttpCode = v
}

// GetForwardScheme returns the ForwardScheme field value
func (o *PostRedirectionHostCreateRequest) GetForwardScheme() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ForwardScheme
}

// GetForwardSchemeOk returns a tuple with the ForwardScheme field value
// and a boolean to check if the value has been set.
func (o *PostRedirectionHostCreateRequest) GetForwardSchemeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ForwardScheme, true
}

// SetForwardScheme sets field value
func (o *PostRedirectionHostCreateRequest) SetForwardScheme(v string) {
	o.ForwardScheme = v
}

// GetForwardDomainName returns the ForwardDomainName field value
func (o *PostRedirectionHostCreateRequest) GetForwardDomainName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ForwardDomainName
}

// GetForwardDomainNameOk returns a tuple with the ForwardDomainName field value
// and a boolean to check if the value has been set.
func (o *PostRedirectionHostCreateRequest) GetForwardDomainNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ForwardDomainName, true
}

// SetForwardDomainName sets field value
func (o *PostRedirectionHostCreateRequest) SetForwardDomainName(v string) {
	o.ForwardDomainName = v
}

// GetPreservePath returns the PreservePath field value if set, zero value otherwise.
func (o *PostRedirectionHostCreateRequest) GetPreservePath() boolAsInt {
	if o == nil || IsNil(o.PreservePath) {
		var ret boolAsInt
		return ret
	}
	return *o.PreservePath
}

// GetPreservePathOk returns a tuple with the PreservePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostRedirectionHostCreateRequest) GetPreservePathOk() (*boolAsInt, bool) {
	if o == nil || IsNil(o.PreservePath) {
		return nil, false
	}
	return o.PreservePath, true
}

// HasPreservePath returns a boolean if a field has been set.
func (o *PostRedirectionHostCreateRequest) HasPreservePath() bool {
	if o != nil && !IsNil(o.PreservePath) {
		return true
	}

	return false
}

// SetPreservePath gets a reference to the given boolAsInt and assigns it to the PreservePath field.
func (o *PostRedirectionHostCreateRequest) SetPreservePath(v boolAsInt) {
	o.PreservePath = &v
}

// GetCertificateId returns the CertificateId field value if set, zero value otherwise.
func (o *PostRedirectionHostCreateRequest) GetCertificateId() PutProxyHostUpdateRequestCertificateId {
	if o == nil || IsNil(o.CertificateId) {
		var ret PutProxyHostUpdateRequestCertificateId
		return ret
	}
	return *o.CertificateId
}

// GetCertificateIdOk returns a tuple with the CertificateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostRedirectionHostCreateRequest) GetCertificateIdOk() (*PutProxyHostUpdateRequestCertificateId, bool) {
	if o == nil || IsNil(o.CertificateId) {
		return nil, false
	}
	return o.CertificateId, true
}

// HasCertificateId returns a boolean if a field has been set.
func (o *PostRedirectionHostCreateRequest) HasCertificateId() bool {
	if o != nil && !IsNil(o.CertificateId) {
		return true
	}

	return false
}

// SetCertificateId gets a reference to the given PutProxyHostUpdateRequestCertificateId and assigns it to the CertificateId field.
func (o *PostRedirectionHostCreateRequest) SetCertificateId(v PutProxyHostUpdateRequestCertificateId) {
	o.CertificateId = &v
}

// GetSslForced returns the SslForced field value if set, zero value otherwise.
func (o *PostRedirectionHostCreateRequest) GetSslForced() boolAsInt {
	if o == nil || IsNil(o.SslForced) {
		var ret boolAsInt
		return ret
	}
	return *o.SslForced
}

// GetSslForcedOk returns a tuple with the SslForced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostRedirectionHostCreateRequest) GetSslForcedOk() (*boolAsInt, bool) {
	if o == nil || IsNil(o.SslForced) {
		return nil, false
	}
	return o.SslForced, true
}

// HasSslForced returns a boolean if a field has been set.
func (o *PostRedirectionHostCreateRequest) HasSslForced() bool {
	if o != nil && !IsNil(o.SslForced) {
		return true
	}

	return false
}

// SetSslForced gets a reference to the given boolAsInt and assigns it to the SslForced field.
func (o *PostRedirectionHostCreateRequest) SetSslForced(v boolAsInt) {
	o.SslForced = &v
}

// GetHstsEnabled returns the HstsEnabled field value if set, zero value otherwise.
func (o *PostRedirectionHostCreateRequest) GetHstsEnabled() boolAsInt {
	if o == nil || IsNil(o.HstsEnabled) {
		var ret boolAsInt
		return ret
	}
	return *o.HstsEnabled
}

// GetHstsEnabledOk returns a tuple with the HstsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostRedirectionHostCreateRequest) GetHstsEnabledOk() (*boolAsInt, bool) {
	if o == nil || IsNil(o.HstsEnabled) {
		return nil, false
	}
	return o.HstsEnabled, true
}

// HasHstsEnabled returns a boolean if a field has been set.
func (o *PostRedirectionHostCreateRequest) HasHstsEnabled() bool {
	if o != nil && !IsNil(o.HstsEnabled) {
		return true
	}

	return false
}

// SetHstsEnabled gets a reference to the given boolAsInt and assigns it to the HstsEnabled field.
func (o *PostRedirectionHostCreateRequest) SetHstsEnabled(v boolAsInt) {
	o.HstsEnabled = &v
}

// GetHstsSubdomains returns the HstsSubdomains field value if set, zero value otherwise.
func (o *PostRedirectionHostCreateRequest) GetHstsSubdomains() boolAsInt {
	if o == nil || IsNil(o.HstsSubdomains) {
		var ret boolAsInt
		return ret
	}
	return *o.HstsSubdomains
}

// GetHstsSubdomainsOk returns a tuple with the HstsSubdomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostRedirectionHostCreateRequest) GetHstsSubdomainsOk() (*boolAsInt, bool) {
	if o == nil || IsNil(o.HstsSubdomains) {
		return nil, false
	}
	return o.HstsSubdomains, true
}

// HasHstsSubdomains returns a boolean if a field has been set.
func (o *PostRedirectionHostCreateRequest) HasHstsSubdomains() bool {
	if o != nil && !IsNil(o.HstsSubdomains) {
		return true
	}

	return false
}

// SetHstsSubdomains gets a reference to the given boolAsInt and assigns it to the HstsSubdomains field.
func (o *PostRedirectionHostCreateRequest) SetHstsSubdomains(v boolAsInt) {
	o.HstsSubdomains = &v
}

// GetHttp2Support returns the Http2Support field value if set, zero value otherwise.
func (o *PostRedirectionHostCreateRequest) GetHttp2Support() boolAsInt {
	if o == nil || IsNil(o.Http2Support) {
		var ret boolAsInt
		return ret
	}
	return *o.Http2Support
}

// GetHttp2SupportOk returns a tuple with the Http2Support field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostRedirectionHostCreateRequest) GetHttp2SupportOk() (*boolAsInt, bool) {
	if o == nil || IsNil(o.Http2Support) {
		return nil, false
	}
	return o.Http2Support, true
}

// HasHttp2Support returns a boolean if a field has been set.
func (o *PostRedirectionHostCreateRequest) HasHttp2Support() bool {
	if o != nil && !IsNil(o.Http2Support) {
		return true
	}

	return false
}

// SetHttp2Support gets a reference to the given boolAsInt and assigns it to the Http2Support field.
func (o *PostRedirectionHostCreateRequest) SetHttp2Support(v boolAsInt) {
	o.Http2Support = &v
}

// GetBlockExploits returns the BlockExploits field value if set, zero value otherwise.
func (o *PostRedirectionHostCreateRequest) GetBlockExploits() boolAsInt {
	if o == nil || IsNil(o.BlockExploits) {
		var ret boolAsInt
		return ret
	}
	return *o.BlockExploits
}

// GetBlockExploitsOk returns a tuple with the BlockExploits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostRedirectionHostCreateRequest) GetBlockExploitsOk() (*boolAsInt, bool) {
	if o == nil || IsNil(o.BlockExploits) {
		return nil, false
	}
	return o.BlockExploits, true
}

// HasBlockExploits returns a boolean if a field has been set.
func (o *PostRedirectionHostCreateRequest) HasBlockExploits() bool {
	if o != nil && !IsNil(o.BlockExploits) {
		return true
	}

	return false
}

// SetBlockExploits gets a reference to the given boolAsInt and assigns it to the BlockExploits field.
func (o *PostRedirectionHostCreateRequest) SetBlockExploits(v boolAsInt) {
	o.BlockExploits = &v
}

// GetAdvancedConfig returns the AdvancedConfig field value if set, zero value otherwise.
func (o *PostRedirectionHostCreateRequest) GetAdvancedConfig() string {
	if o == nil || IsNil(o.AdvancedConfig) {
		var ret string
		return ret
	}
	return *o.AdvancedConfig
}

// GetAdvancedConfigOk returns a tuple with the AdvancedConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostRedirectionHostCreateRequest) GetAdvancedConfigOk() (*string, bool) {
	if o == nil || IsNil(o.AdvancedConfig) {
		return nil, false
	}
	return o.AdvancedConfig, true
}

// HasAdvancedConfig returns a boolean if a field has been set.
func (o *PostRedirectionHostCreateRequest) HasAdvancedConfig() bool {
	if o != nil && !IsNil(o.AdvancedConfig) {
		return true
	}

	return false
}

// SetAdvancedConfig gets a reference to the given string and assigns it to the AdvancedConfig field.
func (o *PostRedirectionHostCreateRequest) SetAdvancedConfig(v string) {
	o.AdvancedConfig = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *PostRedirectionHostCreateRequest) GetMeta() map[string]interface{} {
	if o == nil || IsNil(o.Meta) {
		var ret map[string]interface{}
		return ret
	}
	return o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostRedirectionHostCreateRequest) GetMetaOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Meta) {
		return map[string]interface{}{}, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *PostRedirectionHostCreateRequest) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given map[string]interface{} and assigns it to the Meta field.
func (o *PostRedirectionHostCreateRequest) SetMeta(v map[string]interface{}) {
	o.Meta = v
}

func (o PostRedirectionHostCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostRedirectionHostCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["domain_names"] = o.DomainNames
	toSerialize["forward_http_code"] = o.ForwardHttpCode
	toSerialize["forward_scheme"] = o.ForwardScheme
	toSerialize["forward_domain_name"] = o.ForwardDomainName
	if !IsNil(o.PreservePath) {
		toSerialize["preserve_path"] = o.PreservePath
	}
	if !IsNil(o.CertificateId) {
		toSerialize["certificate_id"] = o.CertificateId
	}
	if !IsNil(o.SslForced) {
		toSerialize["ssl_forced"] = o.SslForced
	}
	if !IsNil(o.HstsEnabled) {
		toSerialize["hsts_enabled"] = o.HstsEnabled
	}
	if !IsNil(o.HstsSubdomains) {
		toSerialize["hsts_subdomains"] = o.HstsSubdomains
	}
	if !IsNil(o.Http2Support) {
		toSerialize["http2_support"] = o.Http2Support
	}
	if !IsNil(o.BlockExploits) {
		toSerialize["block_exploits"] = o.BlockExploits
	}
	if !IsNil(o.AdvancedConfig) {
		toSerialize["advanced_config"] = o.AdvancedConfig
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

func (o *PostRedirectionHostCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"domain_names",
		"forward_http_code",
		"forward_scheme",
		"forward_domain_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostRedirectionHostCreateRequest := _PostRedirectionHostCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostRedirectionHostCreateRequest)

	if err != nil {
		return err
	}

	*o = PostRedirectionHostCreateRequest(varPostRedirectionHostCreateRequest)

	return err
}

type NullablePostRedirectionHostCreateRequest struct {
	value *PostRedirectionHostCreateRequest
	isSet bool
}

func (v NullablePostRedirectionHostCreateRequest) Get() *PostRedirectionHostCreateRequest {
	return v.value
}

func (v *NullablePostRedirectionHostCreateRequest) Set(val *PostRedirectionHostCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostRedirectionHostCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostRedirectionHostCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostRedirectionHostCreateRequest(val *PostRedirectionHostCreateRequest) *NullablePostRedirectionHostCreateRequest {
	return &NullablePostRedirectionHostCreateRequest{value: val, isSet: true}
}

func (v NullablePostRedirectionHostCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostRedirectionHostCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


